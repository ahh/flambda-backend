(* TEST
 flags = "-extension layouts_beta -extension small_numbers";
 include beta;
 flambda2;
 native;
*)
(** This is code generated by [generate_mixed_blocks_code.ml]. *)


module Int63 = struct
  module Nothing = struct type t = | end
  include Sys.Immediate64.Make (Int) (Nothing)

  let of_int (i : int) : t =
    match repr with
    | Immediate -> i
    | Non_immediate -> failwith "not implemented for non-64 bit platforms"

  let to_int (t : t) : int =
    match repr with
    | Immediate -> t
    | Non_immediate -> failwith "not implemented for non-64 bit platforms"
end

(* Helper functions for manipulating the fields of a mixed record *)
let create_string () = String.make (Random.int 100) 'a'
let create_int () = Random.int 0x3FFF_FFFF
let create_int63 () = Int63.of_int (Random.int 0x3FFF_FFFF)
let create_float () = Random.float Float.max_float
let create_float32 () = Beta.Float32.of_float (Random.float Float.max_float)
let create_float_u () = Stdlib__Float_u.of_float (create_float ())
let create_float32_u () = Beta.Float32_u.of_float32 (create_float32 ())
let create_int32_u () = Stdlib__Int32_u.of_int32 (Random.int32 0x7FFF_FFFFl)
let create_int64_u () = Stdlib__Int64_u.of_int64 (Random.int64 0x7FFF_FFFF_FFFF_FFFFL)
let create_nativeint_u () = Stdlib__Nativeint_u.of_nativeint (Random.nativeint 0x7FFF_FFFF_FFFF_FFFFn)
let check_gen ~equal ~to_string ~message y1 y2 =
  if equal y1 y2 then () else
    failwith
      (Printf.sprintf "%s: %s <> %s" message (to_string y1) (to_string y2))

let check_string = check_gen ~equal:String.equal ~to_string:(fun x -> x)
let check_int = check_gen ~equal:Int.equal ~to_string:Int.to_string
let check_float =
  check_gen ~equal:Float.equal ~to_string:Float.to_string
let check_float32 =
  check_gen ~equal:Beta.Float32.equal ~to_string:Beta.Float32.to_string
let check_int32 =
  check_gen ~equal:Int32.equal ~to_string:Int32.to_string
let check_int64 =
  check_gen ~equal:Int64.equal ~to_string:Int64.to_string

(* Helper functions for testing polymorphic copying. *)

let copy_via_weak x =
  let weak = Weak.create 1 in
  Weak.set weak 0 (Some x);
  Weak.get_copy weak 0 |> Option.get

let copy_via_tag x =
  let obj = Obj.repr x in
  Obj.with_tag (Obj.tag obj) obj |> Obj.obj;;

(* Helper functions for testing polymorphic operations. *)
let oc = Out_channel.open_bin "/dev/null"
exception Unexpected_success
type forget = T : _ -> forget

let expect_failure f =
  try f (); raise Unexpected_success with
  | Unexpected_success -> assert false
  | _ -> ()

let hash_expect_failure x =
  expect_failure (fun () -> ignore (Hashtbl.hash x : int))

let compare_expect_failure x y =
  expect_failure (fun () -> ignore (compare (T x) (T y) : int));
  expect_failure (fun () -> ignore ((T x) = (T y) : bool))

let compare_expect_success x y =
  ignore (compare (T x) (T y) : int);
  ignore ((T x) = (T y) : bool)

let marshal_expect_failure t =
  expect_failure (fun () -> output_value oc t)

let check_reachable_words expected actual message =
  if expected <> actual
  then failwith (Printf.sprintf "%s: %d <> %d" message expected actual)
;;

(* Type declarations *)
type t0 = { float0 : float; float_u1 : float# }
type t1 = { float_u0 : float#; float1 : float }
type t2 = { float0 : float; float_u1 : float#; float_u2 : float# }
type t3 = { float_u0 : float#; float1 : float; float_u2 : float# }
type t4 = { float0 : float; float1 : float; float_u2 : float# }
type t5 = { float_u0 : float#; float_u1 : float#; float2 : float }
type t6 = { float0 : float; float_u1 : float#; float2 : float }
type t7 = { float_u0 : float#; float1 : float; float2 : float }
type t8 = { float0 : float; float_u1 : float#; float_u2 : float#; float_u3 : float# }
type t9 = { float_u0 : float#; float1 : float; float_u2 : float#; float_u3 : float# }
type t10 = { float0 : float; float1 : float; float_u2 : float#; float_u3 : float# }
type t11 = { float_u0 : float#; float_u1 : float#; float2 : float; float_u3 : float# }
type t12 = { float0 : float; float_u1 : float#; float2 : float; float_u3 : float# }
type t13 = { float_u0 : float#; float1 : float; float2 : float; float_u3 : float# }
type t14 = { float0 : float; float1 : float; float2 : float; float_u3 : float# }
type t15 = { float_u0 : float#; float_u1 : float#; float_u2 : float#; float3 : float }
type t16 = { float0 : float; float_u1 : float#; float_u2 : float#; float3 : float }
type t17 = { float_u0 : float#; float1 : float; float_u2 : float#; float3 : float }
type t18 = { str0 : string; float_u1 : float# }
type t19 = { float32_u0 : float32# }
type t20 = { str0 : string; float32_u1 : float32# }
type t21 = { i32_0 : int32# }
type t22 = { str0 : string; str1 : string; float_u2 : float# }
type t23 = { float0 : float; float32_u1 : float32# }
type t24 = { str0 : string; i32_1 : int32# }
type t25 = { i64_0 : int64# }
type t26 = { float0 : float; str1 : string; float_u2 : float# }
type t27 = { str0 : string; str1 : string; float32_u2 : float32# }
type t28 = { float0 : float; i32_1 : int32# }
type t29 = { str0 : string; i64_1 : int64# }
type t30 = { n0 : nativeint# }
type t31 = { imm0 : int; str1 : string; float_u2 : float# }
type t32 = { float0 : float; str1 : string; float32_u2 : float32# }
type t33 = { str0 : string; str1 : string; i32_2 : int32# }
type t34 = { float0 : float; i64_1 : int64# }
type t35 = { str0 : string; n1 : nativeint# }
type t36 = { float_u0 : float#; imm1 : int }
type t37 = { str0 : string; float1 : float; float_u2 : float# }
type t38 = { imm0 : int; str1 : string; float32_u2 : float32# }
type t39 = { float0 : float; str1 : string; i32_2 : int32# }
type t40 = { str0 : string; str1 : string; i64_2 : int64# }
type t41 = { float0 : float; n1 : nativeint# }
type t42 = { str0 : string; float_u1 : float#; imm2 : int }
type t43 = { float32_u0 : float32#; imm1 : int }
type t44 = { str0 : string; float1 : float; float32_u2 : float32# }
type t45 = { imm0 : int; str1 : string; i32_2 : int32# }
type t46 = { float0 : float; str1 : string; i64_2 : int64# }
type t47 = { str0 : string; str1 : string; n2 : nativeint# }
type t48 = { float0 : float; float_u1 : float#; imm2 : int }
type t49 = { str0 : string; float32_u1 : float32#; imm2 : int }
type t50 = { i32_0 : int32#; imm1 : int }
type t51 = { imm0 : int; float1 : float; float_u2 : float# }
type t52 = { float0 : float; float1 : float; float32_u2 : float32# }
type t53 = { str0 : string; float1 : float; i32_2 : int32# }
type t54 = { imm0 : int; str1 : string; i64_2 : int64# }
type t55 = { float0 : float; str1 : string; n2 : nativeint# }
type t56 = { str0 : string; str1 : string; float_u2 : float#; imm3 : int }
type t57 = { float0 : float; float32_u1 : float32#; imm2 : int }
type t58 = { str0 : string; i32_1 : int32#; imm2 : int }
type t59 = { i64_0 : int64#; imm1 : int }
type t60 = { str0 : string; str1 : string; str2 : string; float_u3 : float# }
type t61 = { imm0 : int; float1 : float; float32_u2 : float32# }
type t62 = { float0 : float; float1 : float; i32_2 : int32# }
type t63 = { str0 : string; float1 : float; i64_2 : int64# }
type t64 = { imm0 : int; str1 : string; n2 : nativeint# }
type t65 = { float0 : float; str1 : string; float_u2 : float#; imm3 : int }
type t66 = { str0 : string; str1 : string; float32_u2 : float32#; imm3 : int }
type t67 = { float0 : float; i32_1 : int32#; imm2 : int }
type t68 = { str0 : string; i64_1 : int64#; imm2 : int }
type t69 = { n0 : nativeint#; imm1 : int }
type t70 = { float0 : float; str1 : string; str2 : string; float_u3 : float# }
type t71 = { str0 : string; str1 : string; str2 : string; float32_u3 : float32# }
type t72 = { imm0 : int; float1 : float; i32_2 : int32# }
type t73 = { float0 : float; float1 : float; i64_2 : int64# }
type t74 = { str0 : string; float1 : float; n2 : nativeint# }
type t75 =
  | A of float#
  | B of string * float#
type t76 =
  | A of float32#
  | B of float * float#
type t77 =
  | A of string * float32#
  | B of int32#
type t78 =
  | A of string * string * float#
  | B of float * float32#
type t79 =
  | A of string * int32#
  | B of int64#
type t80 =
  | A of float * string * float#
  | B of string * string * float32#
type t81 =
  | A of float * int32#
  | B of string * int64#
type t82 =
  | A of nativeint#
  | B of int * string * float#
type t83 =
  | A of float * string * float32#
  | B of string * string * int32#
type t84 =
  | A of float * int64#
  | B of string * nativeint#
type t85 =
  | A of float# * int
  | B of string * float * float#
type t86 =
  | A of int * string * float32#
  | B of float * string * int32#
type t87 =
  | A of string * string * int64#
  | B of float * nativeint#
type t88 =
  | A of string * float# * int
  | B of float32# * int
type t89 =
  | A of float * float * float#
  | B of string * float * float32#
type t90 =
  | A of int * string * int32#
  | B of float * string * int64#
type t91 =
  | A of string * string * nativeint#
  | B of float * float# * int
type t92 =
  | A of string * float32# * int
  | B of int32# * int
type t93 =
  | A of int * float * float#
  | B of float * float * float32#
type t94 =
  | A of string * float * int32#
  | B of int * string * int64#
type t95 =
  | A of float * string * nativeint#
  | B of string * string * float# * int
type t96 =
  | A of float * float32# * int
  | B of string * int32# * int
type t97 =
  | A of int64# * int
  | B of string * string * string * float#
type t98 =
  | A of int * float * float32#
  | B of float * float * int32#
type t99 =
  | A of string * float * int64#
  | B of int * string * nativeint#
type t100 =
  | A of float * string * float# * int
  | B of string * string * float32# * int
type t101 =
  | A of float * int32# * int
  | B of string * int64# * int
type t102 =
  | A of nativeint# * int
  | B of float * string * string * float#
type t103 =
  | A of string * string * string * float32#
  | B of int * float * int32#
type t104 =
  | A of float * float * int64#
  | B of string * float * nativeint#
type t105 =
  | A of int * string * float# * int
  | B of float * string * float32# * int
type t106 =
  | A of string * string * int32# * int
  | B of float * int64# * int
type t107 =
  | A of string * nativeint# * int
  | B of float# * Int63.t
type t108 =
  | A of int * string * string * float#
  | B of float * string * string * float32#
type t109 =
  | A of string * string * string * int32#
  | B of int * float * int64#
type t110 =
  | A of float * float * nativeint#
  | B of string * float * float# * int
type t111 =
  | A of int * string * float32# * int
  | B of float * string * int32# * int

(* Let declarations *)
let () = print_endline "Creating values";;
let t0 : t0 = { float0 = create_float (); float_u1 = create_float_u () };;
let t1 : t1 = { float_u0 = create_float_u (); float1 = create_float () };;
let t2 : t2 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u () };;
let t3 : t3 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u () };;
let t4 : t4 = { float0 = create_float (); float1 = create_float (); float_u2 = create_float_u () };;
let t5 : t5 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float2 = create_float () };;
let t6 : t6 = { float0 = create_float (); float_u1 = create_float_u (); float2 = create_float () };;
let t7 : t7 = { float_u0 = create_float_u (); float1 = create_float (); float2 = create_float () };;
let t8 : t8 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u (); float_u3 = create_float_u () };;
let t9 : t9 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u (); float_u3 = create_float_u () };;
let t10 : t10 = { float0 = create_float (); float1 = create_float (); float_u2 = create_float_u (); float_u3 = create_float_u () };;
let t11 : t11 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float2 = create_float (); float_u3 = create_float_u () };;
let t12 : t12 = { float0 = create_float (); float_u1 = create_float_u (); float2 = create_float (); float_u3 = create_float_u () };;
let t13 : t13 = { float_u0 = create_float_u (); float1 = create_float (); float2 = create_float (); float_u3 = create_float_u () };;
let t14 : t14 = { float0 = create_float (); float1 = create_float (); float2 = create_float (); float_u3 = create_float_u () };;
let t15 : t15 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float_u2 = create_float_u (); float3 = create_float () };;
let t16 : t16 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u (); float3 = create_float () };;
let t17 : t17 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u (); float3 = create_float () };;
let t18 : t18 = { str0 = create_string (); float_u1 = create_float_u () };;
let t19 : t19 = { float32_u0 = create_float32_u () };;
let t20 : t20 = { str0 = create_string (); float32_u1 = create_float32_u () };;
let t21 : t21 = { i32_0 = create_int32_u () };;
let t22 : t22 = { str0 = create_string (); str1 = create_string (); float_u2 = create_float_u () };;
let t23 : t23 = { float0 = create_float (); float32_u1 = create_float32_u () };;
let t24 : t24 = { str0 = create_string (); i32_1 = create_int32_u () };;
let t25 : t25 = { i64_0 = create_int64_u () };;
let t26 : t26 = { float0 = create_float (); str1 = create_string (); float_u2 = create_float_u () };;
let t27 : t27 = { str0 = create_string (); str1 = create_string (); float32_u2 = create_float32_u () };;
let t28 : t28 = { float0 = create_float (); i32_1 = create_int32_u () };;
let t29 : t29 = { str0 = create_string (); i64_1 = create_int64_u () };;
let t30 : t30 = { n0 = create_nativeint_u () };;
let t31 : t31 = { imm0 = create_int (); str1 = create_string (); float_u2 = create_float_u () };;
let t32 : t32 = { float0 = create_float (); str1 = create_string (); float32_u2 = create_float32_u () };;
let t33 : t33 = { str0 = create_string (); str1 = create_string (); i32_2 = create_int32_u () };;
let t34 : t34 = { float0 = create_float (); i64_1 = create_int64_u () };;
let t35 : t35 = { str0 = create_string (); n1 = create_nativeint_u () };;
let t36 : t36 = { float_u0 = create_float_u (); imm1 = create_int () };;
let t37 : t37 = { str0 = create_string (); float1 = create_float (); float_u2 = create_float_u () };;
let t38 : t38 = { imm0 = create_int (); str1 = create_string (); float32_u2 = create_float32_u () };;
let t39 : t39 = { float0 = create_float (); str1 = create_string (); i32_2 = create_int32_u () };;
let t40 : t40 = { str0 = create_string (); str1 = create_string (); i64_2 = create_int64_u () };;
let t41 : t41 = { float0 = create_float (); n1 = create_nativeint_u () };;
let t42 : t42 = { str0 = create_string (); float_u1 = create_float_u (); imm2 = create_int () };;
let t43 : t43 = { float32_u0 = create_float32_u (); imm1 = create_int () };;
let t44 : t44 = { str0 = create_string (); float1 = create_float (); float32_u2 = create_float32_u () };;
let t45 : t45 = { imm0 = create_int (); str1 = create_string (); i32_2 = create_int32_u () };;
let t46 : t46 = { float0 = create_float (); str1 = create_string (); i64_2 = create_int64_u () };;
let t47 : t47 = { str0 = create_string (); str1 = create_string (); n2 = create_nativeint_u () };;
let t48 : t48 = { float0 = create_float (); float_u1 = create_float_u (); imm2 = create_int () };;
let t49 : t49 = { str0 = create_string (); float32_u1 = create_float32_u (); imm2 = create_int () };;
let t50 : t50 = { i32_0 = create_int32_u (); imm1 = create_int () };;
let t51 : t51 = { imm0 = create_int (); float1 = create_float (); float_u2 = create_float_u () };;
let t52 : t52 = { float0 = create_float (); float1 = create_float (); float32_u2 = create_float32_u () };;
let t53 : t53 = { str0 = create_string (); float1 = create_float (); i32_2 = create_int32_u () };;
let t54 : t54 = { imm0 = create_int (); str1 = create_string (); i64_2 = create_int64_u () };;
let t55 : t55 = { float0 = create_float (); str1 = create_string (); n2 = create_nativeint_u () };;
let t56 : t56 = { str0 = create_string (); str1 = create_string (); float_u2 = create_float_u (); imm3 = create_int () };;
let t57 : t57 = { float0 = create_float (); float32_u1 = create_float32_u (); imm2 = create_int () };;
let t58 : t58 = { str0 = create_string (); i32_1 = create_int32_u (); imm2 = create_int () };;
let t59 : t59 = { i64_0 = create_int64_u (); imm1 = create_int () };;
let t60 : t60 = { str0 = create_string (); str1 = create_string (); str2 = create_string (); float_u3 = create_float_u () };;
let t61 : t61 = { imm0 = create_int (); float1 = create_float (); float32_u2 = create_float32_u () };;
let t62 : t62 = { float0 = create_float (); float1 = create_float (); i32_2 = create_int32_u () };;
let t63 : t63 = { str0 = create_string (); float1 = create_float (); i64_2 = create_int64_u () };;
let t64 : t64 = { imm0 = create_int (); str1 = create_string (); n2 = create_nativeint_u () };;
let t65 : t65 = { float0 = create_float (); str1 = create_string (); float_u2 = create_float_u (); imm3 = create_int () };;
let t66 : t66 = { str0 = create_string (); str1 = create_string (); float32_u2 = create_float32_u (); imm3 = create_int () };;
let t67 : t67 = { float0 = create_float (); i32_1 = create_int32_u (); imm2 = create_int () };;
let t68 : t68 = { str0 = create_string (); i64_1 = create_int64_u (); imm2 = create_int () };;
let t69 : t69 = { n0 = create_nativeint_u (); imm1 = create_int () };;
let t70 : t70 = { float0 = create_float (); str1 = create_string (); str2 = create_string (); float_u3 = create_float_u () };;
let t71 : t71 = { str0 = create_string (); str1 = create_string (); str2 = create_string (); float32_u3 = create_float32_u () };;
let t72 : t72 = { imm0 = create_int (); float1 = create_float (); i32_2 = create_int32_u () };;
let t73 : t73 = { float0 = create_float (); float1 = create_float (); i64_2 = create_int64_u () };;
let t74 : t74 = { str0 = create_string (); float1 = create_float (); n2 = create_nativeint_u () };;
let t75_A : t75 = (A (create_float_u ()));;
let t75_B : t75 = (B (create_string (), create_float_u ()));;
let t76_A : t76 = (A (create_float32_u ()));;
let t76_B : t76 = (B (create_float (), create_float_u ()));;
let t77_A : t77 = (A (create_string (), create_float32_u ()));;
let t77_B : t77 = (B (create_int32_u ()));;
let t78_A : t78 = (A (create_string (), create_string (), create_float_u ()));;
let t78_B : t78 = (B (create_float (), create_float32_u ()));;
let t79_A : t79 = (A (create_string (), create_int32_u ()));;
let t79_B : t79 = (B (create_int64_u ()));;
let t80_A : t80 = (A (create_float (), create_string (), create_float_u ()));;
let t80_B : t80 = (B (create_string (), create_string (), create_float32_u ()));;
let t81_A : t81 = (A (create_float (), create_int32_u ()));;
let t81_B : t81 = (B (create_string (), create_int64_u ()));;
let t82_A : t82 = (A (create_nativeint_u ()));;
let t82_B : t82 = (B (create_int (), create_string (), create_float_u ()));;
let t83_A : t83 = (A (create_float (), create_string (), create_float32_u ()));;
let t83_B : t83 = (B (create_string (), create_string (), create_int32_u ()));;
let t84_A : t84 = (A (create_float (), create_int64_u ()));;
let t84_B : t84 = (B (create_string (), create_nativeint_u ()));;
let t85_A : t85 = (A (create_float_u (), create_int ()));;
let t85_B : t85 = (B (create_string (), create_float (), create_float_u ()));;
let t86_A : t86 = (A (create_int (), create_string (), create_float32_u ()));;
let t86_B : t86 = (B (create_float (), create_string (), create_int32_u ()));;
let t87_A : t87 = (A (create_string (), create_string (), create_int64_u ()));;
let t87_B : t87 = (B (create_float (), create_nativeint_u ()));;
let t88_A : t88 = (A (create_string (), create_float_u (), create_int ()));;
let t88_B : t88 = (B (create_float32_u (), create_int ()));;
let t89_A : t89 = (A (create_float (), create_float (), create_float_u ()));;
let t89_B : t89 = (B (create_string (), create_float (), create_float32_u ()));;
let t90_A : t90 = (A (create_int (), create_string (), create_int32_u ()));;
let t90_B : t90 = (B (create_float (), create_string (), create_int64_u ()));;
let t91_A : t91 = (A (create_string (), create_string (), create_nativeint_u ()));;
let t91_B : t91 = (B (create_float (), create_float_u (), create_int ()));;
let t92_A : t92 = (A (create_string (), create_float32_u (), create_int ()));;
let t92_B : t92 = (B (create_int32_u (), create_int ()));;
let t93_A : t93 = (A (create_int (), create_float (), create_float_u ()));;
let t93_B : t93 = (B (create_float (), create_float (), create_float32_u ()));;
let t94_A : t94 = (A (create_string (), create_float (), create_int32_u ()));;
let t94_B : t94 = (B (create_int (), create_string (), create_int64_u ()));;
let t95_A : t95 = (A (create_float (), create_string (), create_nativeint_u ()));;
let t95_B : t95 = (B (create_string (), create_string (), create_float_u (), create_int ()));;
let t96_A : t96 = (A (create_float (), create_float32_u (), create_int ()));;
let t96_B : t96 = (B (create_string (), create_int32_u (), create_int ()));;
let t97_A : t97 = (A (create_int64_u (), create_int ()));;
let t97_B : t97 = (B (create_string (), create_string (), create_string (), create_float_u ()));;
let t98_A : t98 = (A (create_int (), create_float (), create_float32_u ()));;
let t98_B : t98 = (B (create_float (), create_float (), create_int32_u ()));;
let t99_A : t99 = (A (create_string (), create_float (), create_int64_u ()));;
let t99_B : t99 = (B (create_int (), create_string (), create_nativeint_u ()));;
let t100_A : t100 = (A (create_float (), create_string (), create_float_u (), create_int ()));;
let t100_B : t100 = (B (create_string (), create_string (), create_float32_u (), create_int ()));;
let t101_A : t101 = (A (create_float (), create_int32_u (), create_int ()));;
let t101_B : t101 = (B (create_string (), create_int64_u (), create_int ()));;
let t102_A : t102 = (A (create_nativeint_u (), create_int ()));;
let t102_B : t102 = (B (create_float (), create_string (), create_string (), create_float_u ()));;
let t103_A : t103 = (A (create_string (), create_string (), create_string (), create_float32_u ()));;
let t103_B : t103 = (B (create_int (), create_float (), create_int32_u ()));;
let t104_A : t104 = (A (create_float (), create_float (), create_int64_u ()));;
let t104_B : t104 = (B (create_string (), create_float (), create_nativeint_u ()));;
let t105_A : t105 = (A (create_int (), create_string (), create_float_u (), create_int ()));;
let t105_B : t105 = (B (create_float (), create_string (), create_float32_u (), create_int ()));;
let t106_A : t106 = (A (create_string (), create_string (), create_int32_u (), create_int ()));;
let t106_B : t106 = (B (create_float (), create_int64_u (), create_int ()));;
let t107_A : t107 = (A (create_string (), create_nativeint_u (), create_int ()));;
let t107_B : t107 = (B (create_float_u (), create_int63 ()));;
let t108_A : t108 = (A (create_int (), create_string (), create_string (), create_float_u ()));;
let t108_B : t108 = (B (create_float (), create_string (), create_string (), create_float32_u ()));;
let t109_A : t109 = (A (create_string (), create_string (), create_string (), create_int32_u ()));;
let t109_B : t109 = (B (create_int (), create_float (), create_int64_u ()));;
let t110_A : t110 = (A (create_float (), create_float (), create_nativeint_u ()));;
let t110_B : t110 = (B (create_string (), create_float (), create_float_u (), create_int ()));;
let t111_A : t111 = (A (create_int (), create_string (), create_float32_u (), create_int ()));;
let t111_B : t111 = (B (create_float (), create_string (), create_int32_u (), create_int ()));;
let () = print_endline " - Doing GC";;
let () = Gc.full_major ();;

(* Copies *)
let () = print_endline "Copying values using [with] record update";;
let t_orig0 = { t0 with float0 = t0.float0 };;
let t_orig1 = { t1 with float_u0 = t1.float_u0 };;
let t_orig2 = { t2 with float0 = t2.float0 };;
let t_orig3 = { t3 with float_u0 = t3.float_u0 };;
let t_orig4 = { t4 with float0 = t4.float0 };;
let t_orig5 = { t5 with float_u0 = t5.float_u0 };;
let t_orig6 = { t6 with float0 = t6.float0 };;
let t_orig7 = { t7 with float_u0 = t7.float_u0 };;
let t_orig8 = { t8 with float0 = t8.float0 };;
let t_orig9 = { t9 with float_u0 = t9.float_u0 };;
let t_orig10 = { t10 with float0 = t10.float0 };;
let t_orig11 = { t11 with float_u0 = t11.float_u0 };;
let t_orig12 = { t12 with float0 = t12.float0 };;
let t_orig13 = { t13 with float_u0 = t13.float_u0 };;
let t_orig14 = { t14 with float0 = t14.float0 };;
let t_orig15 = { t15 with float_u0 = t15.float_u0 };;
let t_orig16 = { t16 with float0 = t16.float0 };;
let t_orig17 = { t17 with float_u0 = t17.float_u0 };;
let t_orig18 = { t18 with str0 = t18.str0 };;
let t_orig19 = { float32_u0 = t19.float32_u0 };;
let t_orig20 = { t20 with str0 = t20.str0 };;
let t_orig21 = { i32_0 = t21.i32_0 };;
let t_orig22 = { t22 with str0 = t22.str0 };;
let t_orig23 = { t23 with float0 = t23.float0 };;
let t_orig24 = { t24 with str0 = t24.str0 };;
let t_orig25 = { i64_0 = t25.i64_0 };;
let t_orig26 = { t26 with float0 = t26.float0 };;
let t_orig27 = { t27 with str0 = t27.str0 };;
let t_orig28 = { t28 with float0 = t28.float0 };;
let t_orig29 = { t29 with str0 = t29.str0 };;
let t_orig30 = { n0 = t30.n0 };;
let t_orig31 = { t31 with imm0 = t31.imm0 };;
let t_orig32 = { t32 with float0 = t32.float0 };;
let t_orig33 = { t33 with str0 = t33.str0 };;
let t_orig34 = { t34 with float0 = t34.float0 };;
let t_orig35 = { t35 with str0 = t35.str0 };;
let t_orig36 = { t36 with float_u0 = t36.float_u0 };;
let t_orig37 = { t37 with str0 = t37.str0 };;
let t_orig38 = { t38 with imm0 = t38.imm0 };;
let t_orig39 = { t39 with float0 = t39.float0 };;
let t_orig40 = { t40 with str0 = t40.str0 };;
let t_orig41 = { t41 with float0 = t41.float0 };;
let t_orig42 = { t42 with str0 = t42.str0 };;
let t_orig43 = { t43 with float32_u0 = t43.float32_u0 };;
let t_orig44 = { t44 with str0 = t44.str0 };;
let t_orig45 = { t45 with imm0 = t45.imm0 };;
let t_orig46 = { t46 with float0 = t46.float0 };;
let t_orig47 = { t47 with str0 = t47.str0 };;
let t_orig48 = { t48 with float0 = t48.float0 };;
let t_orig49 = { t49 with str0 = t49.str0 };;
let t_orig50 = { t50 with i32_0 = t50.i32_0 };;
let t_orig51 = { t51 with imm0 = t51.imm0 };;
let t_orig52 = { t52 with float0 = t52.float0 };;
let t_orig53 = { t53 with str0 = t53.str0 };;
let t_orig54 = { t54 with imm0 = t54.imm0 };;
let t_orig55 = { t55 with float0 = t55.float0 };;
let t_orig56 = { t56 with str0 = t56.str0 };;
let t_orig57 = { t57 with float0 = t57.float0 };;
let t_orig58 = { t58 with str0 = t58.str0 };;
let t_orig59 = { t59 with i64_0 = t59.i64_0 };;
let t_orig60 = { t60 with str0 = t60.str0 };;
let t_orig61 = { t61 with imm0 = t61.imm0 };;
let t_orig62 = { t62 with float0 = t62.float0 };;
let t_orig63 = { t63 with str0 = t63.str0 };;
let t_orig64 = { t64 with imm0 = t64.imm0 };;
let t_orig65 = { t65 with float0 = t65.float0 };;
let t_orig66 = { t66 with str0 = t66.str0 };;
let t_orig67 = { t67 with float0 = t67.float0 };;
let t_orig68 = { t68 with str0 = t68.str0 };;
let t_orig69 = { t69 with n0 = t69.n0 };;
let t_orig70 = { t70 with float0 = t70.float0 };;
let t_orig71 = { t71 with str0 = t71.str0 };;
let t_orig72 = { t72 with imm0 = t72.imm0 };;
let t_orig73 = { t73 with float0 = t73.float0 };;
let t_orig74 = { t74 with str0 = t74.str0 };;
let t_orig75_A = t75_A;;
let t_orig75_B = t75_B;;
let t_orig76_A = t76_A;;
let t_orig76_B = t76_B;;
let t_orig77_A = t77_A;;
let t_orig77_B = t77_B;;
let t_orig78_A = t78_A;;
let t_orig78_B = t78_B;;
let t_orig79_A = t79_A;;
let t_orig79_B = t79_B;;
let t_orig80_A = t80_A;;
let t_orig80_B = t80_B;;
let t_orig81_A = t81_A;;
let t_orig81_B = t81_B;;
let t_orig82_A = t82_A;;
let t_orig82_B = t82_B;;
let t_orig83_A = t83_A;;
let t_orig83_B = t83_B;;
let t_orig84_A = t84_A;;
let t_orig84_B = t84_B;;
let t_orig85_A = t85_A;;
let t_orig85_B = t85_B;;
let t_orig86_A = t86_A;;
let t_orig86_B = t86_B;;
let t_orig87_A = t87_A;;
let t_orig87_B = t87_B;;
let t_orig88_A = t88_A;;
let t_orig88_B = t88_B;;
let t_orig89_A = t89_A;;
let t_orig89_B = t89_B;;
let t_orig90_A = t90_A;;
let t_orig90_B = t90_B;;
let t_orig91_A = t91_A;;
let t_orig91_B = t91_B;;
let t_orig92_A = t92_A;;
let t_orig92_B = t92_B;;
let t_orig93_A = t93_A;;
let t_orig93_B = t93_B;;
let t_orig94_A = t94_A;;
let t_orig94_B = t94_B;;
let t_orig95_A = t95_A;;
let t_orig95_B = t95_B;;
let t_orig96_A = t96_A;;
let t_orig96_B = t96_B;;
let t_orig97_A = t97_A;;
let t_orig97_B = t97_B;;
let t_orig98_A = t98_A;;
let t_orig98_B = t98_B;;
let t_orig99_A = t99_A;;
let t_orig99_B = t99_B;;
let t_orig100_A = t100_A;;
let t_orig100_B = t100_B;;
let t_orig101_A = t101_A;;
let t_orig101_B = t101_B;;
let t_orig102_A = t102_A;;
let t_orig102_B = t102_B;;
let t_orig103_A = t103_A;;
let t_orig103_B = t103_B;;
let t_orig104_A = t104_A;;
let t_orig104_B = t104_B;;
let t_orig105_A = t105_A;;
let t_orig105_B = t105_B;;
let t_orig106_A = t106_A;;
let t_orig106_B = t106_B;;
let t_orig107_A = t107_A;;
let t_orig107_B = t107_B;;
let t_orig108_A = t108_A;;
let t_orig108_B = t108_B;;
let t_orig109_A = t109_A;;
let t_orig109_B = t109_B;;
let t_orig110_A = t110_A;;
let t_orig110_B = t110_B;;
let t_orig111_A = t111_A;;
let t_orig111_B = t111_B;;

(* Checks *)
  let run_checks (t0 : t0) (t1 : t1) (t2 : t2) (t3 : t3) (t4 : t4) (t5 : t5) (t6 : t6) (t7 : t7) (t8 : t8) (t9 : t9) (t10 : t10) (t11 : t11) (t12 : t12) (t13 : t13) (t14 : t14) (t15 : t15) (t16 : t16) (t17 : t17) (t18 : t18) (t19 : t19) (t20 : t20) (t21 : t21) (t22 : t22) (t23 : t23) (t24 : t24) (t25 : t25) (t26 : t26) (t27 : t27) (t28 : t28) (t29 : t29) (t30 : t30) (t31 : t31) (t32 : t32) (t33 : t33) (t34 : t34) (t35 : t35) (t36 : t36) (t37 : t37) (t38 : t38) (t39 : t39) (t40 : t40) (t41 : t41) (t42 : t42) (t43 : t43) (t44 : t44) (t45 : t45) (t46 : t46) (t47 : t47) (t48 : t48) (t49 : t49) (t50 : t50) (t51 : t51) (t52 : t52) (t53 : t53) (t54 : t54) (t55 : t55) (t56 : t56) (t57 : t57) (t58 : t58) (t59 : t59) (t60 : t60) (t61 : t61) (t62 : t62) (t63 : t63) (t64 : t64) (t65 : t65) (t66 : t66) (t67 : t67) (t68 : t68) (t69 : t69) (t70 : t70) (t71 : t71) (t72 : t72) (t73 : t73) (t74 : t74) (t75_A : t75) (t75_B : t75) (t76_A : t76) (t76_B : t76) (t77_A : t77) (t77_B : t77) (t78_A : t78) (t78_B : t78) (t79_A : t79) (t79_B : t79) (t80_A : t80) (t80_B : t80) (t81_A : t81) (t81_B : t81) (t82_A : t82) (t82_B : t82) (t83_A : t83) (t83_B : t83) (t84_A : t84) (t84_B : t84) (t85_A : t85) (t85_B : t85) (t86_A : t86) (t86_B : t86) (t87_A : t87) (t87_B : t87) (t88_A : t88) (t88_B : t88) (t89_A : t89) (t89_B : t89) (t90_A : t90) (t90_B : t90) (t91_A : t91) (t91_B : t91) (t92_A : t92) (t92_B : t92) (t93_A : t93) (t93_B : t93) (t94_A : t94) (t94_B : t94) (t95_A : t95) (t95_B : t95) (t96_A : t96) (t96_B : t96) (t97_A : t97) (t97_B : t97) (t98_A : t98) (t98_B : t98) (t99_A : t99) (t99_B : t99) (t100_A : t100) (t100_B : t100) (t101_A : t101) (t101_B : t101) (t102_A : t102) (t102_B : t102) (t103_A : t103) (t103_B : t103) (t104_A : t104) (t104_B : t104) (t105_A : t105) (t105_B : t105) (t106_A : t106) (t106_B : t106) (t107_A : t107) (t107_B : t107) (t108_A : t108) (t108_B : t108) (t109_A : t109) (t109_B : t109) (t110_A : t110) (t110_B : t110) (t111_A : t111) (t111_B : t111) =
  print_endline "    - Marshaling";
  marshal_expect_failure t0;
  marshal_expect_failure t1;
  marshal_expect_failure t2;
  marshal_expect_failure t3;
  marshal_expect_failure t4;
  marshal_expect_failure t5;
  marshal_expect_failure t6;
  marshal_expect_failure t7;
  marshal_expect_failure t8;
  marshal_expect_failure t9;
  marshal_expect_failure t10;
  marshal_expect_failure t11;
  marshal_expect_failure t12;
  marshal_expect_failure t13;
  marshal_expect_failure t14;
  marshal_expect_failure t15;
  marshal_expect_failure t16;
  marshal_expect_failure t17;
  marshal_expect_failure t18;
  marshal_expect_failure t19;
  marshal_expect_failure t20;
  marshal_expect_failure t21;
  marshal_expect_failure t22;
  marshal_expect_failure t23;
  marshal_expect_failure t24;
  marshal_expect_failure t25;
  marshal_expect_failure t26;
  marshal_expect_failure t27;
  marshal_expect_failure t28;
  marshal_expect_failure t29;
  marshal_expect_failure t30;
  marshal_expect_failure t31;
  marshal_expect_failure t32;
  marshal_expect_failure t33;
  marshal_expect_failure t34;
  marshal_expect_failure t35;
  marshal_expect_failure t36;
  marshal_expect_failure t37;
  marshal_expect_failure t38;
  marshal_expect_failure t39;
  marshal_expect_failure t40;
  marshal_expect_failure t41;
  marshal_expect_failure t42;
  marshal_expect_failure t43;
  marshal_expect_failure t44;
  marshal_expect_failure t45;
  marshal_expect_failure t46;
  marshal_expect_failure t47;
  marshal_expect_failure t48;
  marshal_expect_failure t49;
  marshal_expect_failure t50;
  marshal_expect_failure t51;
  marshal_expect_failure t52;
  marshal_expect_failure t53;
  marshal_expect_failure t54;
  marshal_expect_failure t55;
  marshal_expect_failure t56;
  marshal_expect_failure t57;
  marshal_expect_failure t58;
  marshal_expect_failure t59;
  marshal_expect_failure t60;
  marshal_expect_failure t61;
  marshal_expect_failure t62;
  marshal_expect_failure t63;
  marshal_expect_failure t64;
  marshal_expect_failure t65;
  marshal_expect_failure t66;
  marshal_expect_failure t67;
  marshal_expect_failure t68;
  marshal_expect_failure t69;
  marshal_expect_failure t70;
  marshal_expect_failure t71;
  marshal_expect_failure t72;
  marshal_expect_failure t73;
  marshal_expect_failure t74;
  marshal_expect_failure t75_A;
  marshal_expect_failure t75_B;
  marshal_expect_failure t76_A;
  marshal_expect_failure t76_B;
  marshal_expect_failure t77_A;
  marshal_expect_failure t77_B;
  marshal_expect_failure t78_A;
  marshal_expect_failure t78_B;
  marshal_expect_failure t79_A;
  marshal_expect_failure t79_B;
  marshal_expect_failure t80_A;
  marshal_expect_failure t80_B;
  marshal_expect_failure t81_A;
  marshal_expect_failure t81_B;
  marshal_expect_failure t82_A;
  marshal_expect_failure t82_B;
  marshal_expect_failure t83_A;
  marshal_expect_failure t83_B;
  marshal_expect_failure t84_A;
  marshal_expect_failure t84_B;
  marshal_expect_failure t85_A;
  marshal_expect_failure t85_B;
  marshal_expect_failure t86_A;
  marshal_expect_failure t86_B;
  marshal_expect_failure t87_A;
  marshal_expect_failure t87_B;
  marshal_expect_failure t88_A;
  marshal_expect_failure t88_B;
  marshal_expect_failure t89_A;
  marshal_expect_failure t89_B;
  marshal_expect_failure t90_A;
  marshal_expect_failure t90_B;
  marshal_expect_failure t91_A;
  marshal_expect_failure t91_B;
  marshal_expect_failure t92_A;
  marshal_expect_failure t92_B;
  marshal_expect_failure t93_A;
  marshal_expect_failure t93_B;
  marshal_expect_failure t94_A;
  marshal_expect_failure t94_B;
  marshal_expect_failure t95_A;
  marshal_expect_failure t95_B;
  marshal_expect_failure t96_A;
  marshal_expect_failure t96_B;
  marshal_expect_failure t97_A;
  marshal_expect_failure t97_B;
  marshal_expect_failure t98_A;
  marshal_expect_failure t98_B;
  marshal_expect_failure t99_A;
  marshal_expect_failure t99_B;
  marshal_expect_failure t100_A;
  marshal_expect_failure t100_B;
  marshal_expect_failure t101_A;
  marshal_expect_failure t101_B;
  marshal_expect_failure t102_A;
  marshal_expect_failure t102_B;
  marshal_expect_failure t103_A;
  marshal_expect_failure t103_B;
  marshal_expect_failure t104_A;
  marshal_expect_failure t104_B;
  marshal_expect_failure t105_A;
  marshal_expect_failure t105_B;
  marshal_expect_failure t106_A;
  marshal_expect_failure t106_B;
  marshal_expect_failure t107_A;
  marshal_expect_failure t107_B;
  marshal_expect_failure t108_A;
  marshal_expect_failure t108_B;
  marshal_expect_failure t109_A;
  marshal_expect_failure t109_B;
  marshal_expect_failure t110_A;
  marshal_expect_failure t110_B;
  marshal_expect_failure t111_A;
  marshal_expect_failure t111_B;
  print_endline "    - Hashing";
  hash_expect_failure t0;
  hash_expect_failure t1;
  hash_expect_failure t2;
  hash_expect_failure t3;
  hash_expect_failure t4;
  hash_expect_failure t5;
  hash_expect_failure t6;
  hash_expect_failure t7;
  hash_expect_failure t8;
  hash_expect_failure t9;
  hash_expect_failure t10;
  hash_expect_failure t11;
  hash_expect_failure t12;
  hash_expect_failure t13;
  hash_expect_failure t14;
  hash_expect_failure t15;
  hash_expect_failure t16;
  hash_expect_failure t17;
  hash_expect_failure t18;
  hash_expect_failure t19;
  hash_expect_failure t20;
  hash_expect_failure t21;
  hash_expect_failure t22;
  hash_expect_failure t23;
  hash_expect_failure t24;
  hash_expect_failure t25;
  hash_expect_failure t26;
  hash_expect_failure t27;
  hash_expect_failure t28;
  hash_expect_failure t29;
  hash_expect_failure t30;
  hash_expect_failure t31;
  hash_expect_failure t32;
  hash_expect_failure t33;
  hash_expect_failure t34;
  hash_expect_failure t35;
  hash_expect_failure t36;
  hash_expect_failure t37;
  hash_expect_failure t38;
  hash_expect_failure t39;
  hash_expect_failure t40;
  hash_expect_failure t41;
  hash_expect_failure t42;
  hash_expect_failure t43;
  hash_expect_failure t44;
  hash_expect_failure t45;
  hash_expect_failure t46;
  hash_expect_failure t47;
  hash_expect_failure t48;
  hash_expect_failure t49;
  hash_expect_failure t50;
  hash_expect_failure t51;
  hash_expect_failure t52;
  hash_expect_failure t53;
  hash_expect_failure t54;
  hash_expect_failure t55;
  hash_expect_failure t56;
  hash_expect_failure t57;
  hash_expect_failure t58;
  hash_expect_failure t59;
  hash_expect_failure t60;
  hash_expect_failure t61;
  hash_expect_failure t62;
  hash_expect_failure t63;
  hash_expect_failure t64;
  hash_expect_failure t65;
  hash_expect_failure t66;
  hash_expect_failure t67;
  hash_expect_failure t68;
  hash_expect_failure t69;
  hash_expect_failure t70;
  hash_expect_failure t71;
  hash_expect_failure t72;
  hash_expect_failure t73;
  hash_expect_failure t74;
  hash_expect_failure t75_A;
  hash_expect_failure t75_B;
  hash_expect_failure t76_A;
  hash_expect_failure t76_B;
  hash_expect_failure t77_A;
  hash_expect_failure t77_B;
  hash_expect_failure t78_A;
  hash_expect_failure t78_B;
  hash_expect_failure t79_A;
  hash_expect_failure t79_B;
  hash_expect_failure t80_A;
  hash_expect_failure t80_B;
  hash_expect_failure t81_A;
  hash_expect_failure t81_B;
  hash_expect_failure t82_A;
  hash_expect_failure t82_B;
  hash_expect_failure t83_A;
  hash_expect_failure t83_B;
  hash_expect_failure t84_A;
  hash_expect_failure t84_B;
  hash_expect_failure t85_A;
  hash_expect_failure t85_B;
  hash_expect_failure t86_A;
  hash_expect_failure t86_B;
  hash_expect_failure t87_A;
  hash_expect_failure t87_B;
  hash_expect_failure t88_A;
  hash_expect_failure t88_B;
  hash_expect_failure t89_A;
  hash_expect_failure t89_B;
  hash_expect_failure t90_A;
  hash_expect_failure t90_B;
  hash_expect_failure t91_A;
  hash_expect_failure t91_B;
  hash_expect_failure t92_A;
  hash_expect_failure t92_B;
  hash_expect_failure t93_A;
  hash_expect_failure t93_B;
  hash_expect_failure t94_A;
  hash_expect_failure t94_B;
  hash_expect_failure t95_A;
  hash_expect_failure t95_B;
  hash_expect_failure t96_A;
  hash_expect_failure t96_B;
  hash_expect_failure t97_A;
  hash_expect_failure t97_B;
  hash_expect_failure t98_A;
  hash_expect_failure t98_B;
  hash_expect_failure t99_A;
  hash_expect_failure t99_B;
  hash_expect_failure t100_A;
  hash_expect_failure t100_B;
  hash_expect_failure t101_A;
  hash_expect_failure t101_B;
  hash_expect_failure t102_A;
  hash_expect_failure t102_B;
  hash_expect_failure t103_A;
  hash_expect_failure t103_B;
  hash_expect_failure t104_A;
  hash_expect_failure t104_B;
  hash_expect_failure t105_A;
  hash_expect_failure t105_B;
  hash_expect_failure t106_A;
  hash_expect_failure t106_B;
  hash_expect_failure t107_A;
  hash_expect_failure t107_B;
  hash_expect_failure t108_A;
  hash_expect_failure t108_B;
  hash_expect_failure t109_A;
  hash_expect_failure t109_B;
  hash_expect_failure t110_A;
  hash_expect_failure t110_B;
  hash_expect_failure t111_A;
  hash_expect_failure t111_B;
  print_endline "    - Comparing";
  compare_expect_failure t0 t1;
  compare_expect_failure t1 t2;
  compare_expect_failure t2 t3;
  compare_expect_failure t3 t4;
  compare_expect_failure t4 t5;
  compare_expect_failure t5 t6;
  compare_expect_failure t6 t7;
  compare_expect_failure t7 t8;
  compare_expect_failure t8 t9;
  compare_expect_failure t9 t10;
  compare_expect_failure t10 t11;
  compare_expect_failure t11 t12;
  compare_expect_failure t12 t13;
  compare_expect_failure t13 t14;
  compare_expect_failure t14 t15;
  compare_expect_failure t15 t16;
  compare_expect_failure t16 t17;
  compare_expect_failure t17 t18;
  compare_expect_failure t18 t19;
  compare_expect_failure t19 t20;
  compare_expect_failure t20 t21;
  compare_expect_failure t21 t22;
  compare_expect_failure t22 t23;
  compare_expect_failure t23 t24;
  compare_expect_failure t24 t25;
  compare_expect_failure t25 t26;
  compare_expect_failure t26 t27;
  compare_expect_failure t27 t28;
  compare_expect_failure t28 t29;
  compare_expect_failure t29 t30;
  compare_expect_failure t30 t31;
  compare_expect_failure t31 t32;
  compare_expect_failure t32 t33;
  compare_expect_failure t33 t34;
  compare_expect_failure t34 t35;
  compare_expect_failure t35 t36;
  compare_expect_failure t36 t37;
  compare_expect_failure t37 t38;
  compare_expect_failure t38 t39;
  compare_expect_failure t39 t40;
  compare_expect_failure t40 t41;
  compare_expect_failure t41 t42;
  compare_expect_failure t42 t43;
  compare_expect_failure t43 t44;
  compare_expect_failure t44 t45;
  compare_expect_failure t45 t46;
  compare_expect_failure t46 t47;
  compare_expect_failure t47 t48;
  compare_expect_failure t48 t49;
  compare_expect_failure t49 t50;
  compare_expect_failure t50 t51;
  compare_expect_failure t51 t52;
  compare_expect_failure t52 t53;
  compare_expect_failure t53 t54;
  compare_expect_failure t54 t55;
  compare_expect_failure t55 t56;
  compare_expect_failure t56 t57;
  compare_expect_failure t57 t58;
  compare_expect_failure t58 t59;
  compare_expect_failure t59 t60;
  compare_expect_failure t60 t61;
  compare_expect_failure t61 t62;
  compare_expect_failure t62 t63;
  compare_expect_failure t63 t64;
  compare_expect_failure t64 t65;
  compare_expect_failure t65 t66;
  compare_expect_failure t66 t67;
  compare_expect_failure t67 t68;
  compare_expect_failure t68 t69;
  compare_expect_failure t69 t70;
  compare_expect_failure t70 t71;
  compare_expect_failure t71 t72;
  compare_expect_failure t72 t73;
  compare_expect_failure t73 t74;
  compare_expect_failure t74 t75_A;
  compare_expect_success t75_A t75_B;
  compare_expect_success t75_B t76_A;
  compare_expect_success t76_A t76_B;
  compare_expect_success t76_B t77_A;
  compare_expect_success t77_A t77_B;
  compare_expect_success t77_B t78_A;
  compare_expect_success t78_A t78_B;
  compare_expect_success t78_B t79_A;
  compare_expect_success t79_A t79_B;
  compare_expect_success t79_B t80_A;
  compare_expect_success t80_A t80_B;
  compare_expect_success t80_B t81_A;
  compare_expect_success t81_A t81_B;
  compare_expect_success t81_B t82_A;
  compare_expect_success t82_A t82_B;
  compare_expect_success t82_B t83_A;
  compare_expect_success t83_A t83_B;
  compare_expect_success t83_B t84_A;
  compare_expect_success t84_A t84_B;
  compare_expect_success t84_B t85_A;
  compare_expect_success t85_A t85_B;
  compare_expect_success t85_B t86_A;
  compare_expect_success t86_A t86_B;
  compare_expect_success t86_B t87_A;
  compare_expect_success t87_A t87_B;
  compare_expect_success t87_B t88_A;
  compare_expect_success t88_A t88_B;
  compare_expect_success t88_B t89_A;
  compare_expect_success t89_A t89_B;
  compare_expect_success t89_B t90_A;
  compare_expect_success t90_A t90_B;
  compare_expect_success t90_B t91_A;
  compare_expect_success t91_A t91_B;
  compare_expect_success t91_B t92_A;
  compare_expect_success t92_A t92_B;
  compare_expect_success t92_B t93_A;
  compare_expect_success t93_A t93_B;
  compare_expect_success t93_B t94_A;
  compare_expect_success t94_A t94_B;
  compare_expect_success t94_B t95_A;
  compare_expect_success t95_A t95_B;
  compare_expect_success t95_B t96_A;
  compare_expect_success t96_A t96_B;
  compare_expect_success t96_B t97_A;
  compare_expect_success t97_A t97_B;
  compare_expect_success t97_B t98_A;
  compare_expect_success t98_A t98_B;
  compare_expect_success t98_B t99_A;
  compare_expect_success t99_A t99_B;
  compare_expect_success t99_B t100_A;
  compare_expect_success t100_A t100_B;
  compare_expect_success t100_B t101_A;
  compare_expect_success t101_A t101_B;
  compare_expect_success t101_B t102_A;
  compare_expect_success t102_A t102_B;
  compare_expect_success t102_B t103_A;
  compare_expect_success t103_A t103_B;
  compare_expect_success t103_B t104_A;
  compare_expect_success t104_A t104_B;
  compare_expect_success t104_B t105_A;
  compare_expect_success t105_A t105_B;
  compare_expect_success t105_B t106_A;
  compare_expect_success t106_A t106_B;
  compare_expect_success t106_B t107_A;
  compare_expect_success t107_A t107_B;
  compare_expect_success t107_B t108_A;
  compare_expect_success t108_A t108_B;
  compare_expect_success t108_B t109_A;
  compare_expect_success t109_A t109_B;
  compare_expect_success t109_B t110_A;
  compare_expect_success t110_A t110_B;
  compare_expect_success t110_B t111_A;
  compare_expect_success t111_A t111_B;
  compare_expect_success t111_B t0;
  print_endline "    - Checking field values";
  check_float t0.float0 t_orig0.float0 ~message:"t0.float0";
  check_float (Stdlib__Float_u.to_float t0.float_u1) (Stdlib__Float_u.to_float t_orig0.float_u1) ~message:"t0.float_u1";
  check_float (Stdlib__Float_u.to_float t1.float_u0) (Stdlib__Float_u.to_float t_orig1.float_u0) ~message:"t1.float_u0";
  check_float t1.float1 t_orig1.float1 ~message:"t1.float1";
  check_float t2.float0 t_orig2.float0 ~message:"t2.float0";
  check_float (Stdlib__Float_u.to_float t2.float_u1) (Stdlib__Float_u.to_float t_orig2.float_u1) ~message:"t2.float_u1";
  check_float (Stdlib__Float_u.to_float t2.float_u2) (Stdlib__Float_u.to_float t_orig2.float_u2) ~message:"t2.float_u2";
  check_float (Stdlib__Float_u.to_float t3.float_u0) (Stdlib__Float_u.to_float t_orig3.float_u0) ~message:"t3.float_u0";
  check_float t3.float1 t_orig3.float1 ~message:"t3.float1";
  check_float (Stdlib__Float_u.to_float t3.float_u2) (Stdlib__Float_u.to_float t_orig3.float_u2) ~message:"t3.float_u2";
  check_float t4.float0 t_orig4.float0 ~message:"t4.float0";
  check_float t4.float1 t_orig4.float1 ~message:"t4.float1";
  check_float (Stdlib__Float_u.to_float t4.float_u2) (Stdlib__Float_u.to_float t_orig4.float_u2) ~message:"t4.float_u2";
  check_float (Stdlib__Float_u.to_float t5.float_u0) (Stdlib__Float_u.to_float t_orig5.float_u0) ~message:"t5.float_u0";
  check_float (Stdlib__Float_u.to_float t5.float_u1) (Stdlib__Float_u.to_float t_orig5.float_u1) ~message:"t5.float_u1";
  check_float t5.float2 t_orig5.float2 ~message:"t5.float2";
  check_float t6.float0 t_orig6.float0 ~message:"t6.float0";
  check_float (Stdlib__Float_u.to_float t6.float_u1) (Stdlib__Float_u.to_float t_orig6.float_u1) ~message:"t6.float_u1";
  check_float t6.float2 t_orig6.float2 ~message:"t6.float2";
  check_float (Stdlib__Float_u.to_float t7.float_u0) (Stdlib__Float_u.to_float t_orig7.float_u0) ~message:"t7.float_u0";
  check_float t7.float1 t_orig7.float1 ~message:"t7.float1";
  check_float t7.float2 t_orig7.float2 ~message:"t7.float2";
  check_float t8.float0 t_orig8.float0 ~message:"t8.float0";
  check_float (Stdlib__Float_u.to_float t8.float_u1) (Stdlib__Float_u.to_float t_orig8.float_u1) ~message:"t8.float_u1";
  check_float (Stdlib__Float_u.to_float t8.float_u2) (Stdlib__Float_u.to_float t_orig8.float_u2) ~message:"t8.float_u2";
  check_float (Stdlib__Float_u.to_float t8.float_u3) (Stdlib__Float_u.to_float t_orig8.float_u3) ~message:"t8.float_u3";
  check_float (Stdlib__Float_u.to_float t9.float_u0) (Stdlib__Float_u.to_float t_orig9.float_u0) ~message:"t9.float_u0";
  check_float t9.float1 t_orig9.float1 ~message:"t9.float1";
  check_float (Stdlib__Float_u.to_float t9.float_u2) (Stdlib__Float_u.to_float t_orig9.float_u2) ~message:"t9.float_u2";
  check_float (Stdlib__Float_u.to_float t9.float_u3) (Stdlib__Float_u.to_float t_orig9.float_u3) ~message:"t9.float_u3";
  check_float t10.float0 t_orig10.float0 ~message:"t10.float0";
  check_float t10.float1 t_orig10.float1 ~message:"t10.float1";
  check_float (Stdlib__Float_u.to_float t10.float_u2) (Stdlib__Float_u.to_float t_orig10.float_u2) ~message:"t10.float_u2";
  check_float (Stdlib__Float_u.to_float t10.float_u3) (Stdlib__Float_u.to_float t_orig10.float_u3) ~message:"t10.float_u3";
  check_float (Stdlib__Float_u.to_float t11.float_u0) (Stdlib__Float_u.to_float t_orig11.float_u0) ~message:"t11.float_u0";
  check_float (Stdlib__Float_u.to_float t11.float_u1) (Stdlib__Float_u.to_float t_orig11.float_u1) ~message:"t11.float_u1";
  check_float t11.float2 t_orig11.float2 ~message:"t11.float2";
  check_float (Stdlib__Float_u.to_float t11.float_u3) (Stdlib__Float_u.to_float t_orig11.float_u3) ~message:"t11.float_u3";
  check_float t12.float0 t_orig12.float0 ~message:"t12.float0";
  check_float (Stdlib__Float_u.to_float t12.float_u1) (Stdlib__Float_u.to_float t_orig12.float_u1) ~message:"t12.float_u1";
  check_float t12.float2 t_orig12.float2 ~message:"t12.float2";
  check_float (Stdlib__Float_u.to_float t12.float_u3) (Stdlib__Float_u.to_float t_orig12.float_u3) ~message:"t12.float_u3";
  check_float (Stdlib__Float_u.to_float t13.float_u0) (Stdlib__Float_u.to_float t_orig13.float_u0) ~message:"t13.float_u0";
  check_float t13.float1 t_orig13.float1 ~message:"t13.float1";
  check_float t13.float2 t_orig13.float2 ~message:"t13.float2";
  check_float (Stdlib__Float_u.to_float t13.float_u3) (Stdlib__Float_u.to_float t_orig13.float_u3) ~message:"t13.float_u3";
  check_float t14.float0 t_orig14.float0 ~message:"t14.float0";
  check_float t14.float1 t_orig14.float1 ~message:"t14.float1";
  check_float t14.float2 t_orig14.float2 ~message:"t14.float2";
  check_float (Stdlib__Float_u.to_float t14.float_u3) (Stdlib__Float_u.to_float t_orig14.float_u3) ~message:"t14.float_u3";
  check_float (Stdlib__Float_u.to_float t15.float_u0) (Stdlib__Float_u.to_float t_orig15.float_u0) ~message:"t15.float_u0";
  check_float (Stdlib__Float_u.to_float t15.float_u1) (Stdlib__Float_u.to_float t_orig15.float_u1) ~message:"t15.float_u1";
  check_float (Stdlib__Float_u.to_float t15.float_u2) (Stdlib__Float_u.to_float t_orig15.float_u2) ~message:"t15.float_u2";
  check_float t15.float3 t_orig15.float3 ~message:"t15.float3";
  check_float t16.float0 t_orig16.float0 ~message:"t16.float0";
  check_float (Stdlib__Float_u.to_float t16.float_u1) (Stdlib__Float_u.to_float t_orig16.float_u1) ~message:"t16.float_u1";
  check_float (Stdlib__Float_u.to_float t16.float_u2) (Stdlib__Float_u.to_float t_orig16.float_u2) ~message:"t16.float_u2";
  check_float t16.float3 t_orig16.float3 ~message:"t16.float3";
  check_float (Stdlib__Float_u.to_float t17.float_u0) (Stdlib__Float_u.to_float t_orig17.float_u0) ~message:"t17.float_u0";
  check_float t17.float1 t_orig17.float1 ~message:"t17.float1";
  check_float (Stdlib__Float_u.to_float t17.float_u2) (Stdlib__Float_u.to_float t_orig17.float_u2) ~message:"t17.float_u2";
  check_float t17.float3 t_orig17.float3 ~message:"t17.float3";
  check_string t18.str0 t_orig18.str0 ~message:"t18.str0";
  check_float (Stdlib__Float_u.to_float t18.float_u1) (Stdlib__Float_u.to_float t_orig18.float_u1) ~message:"t18.float_u1";
  check_float32 (Beta.Float32_u.to_float32 t19.float32_u0) (Beta.Float32_u.to_float32 t_orig19.float32_u0) ~message:"t19.float32_u0";
  check_string t20.str0 t_orig20.str0 ~message:"t20.str0";
  check_float32 (Beta.Float32_u.to_float32 t20.float32_u1) (Beta.Float32_u.to_float32 t_orig20.float32_u1) ~message:"t20.float32_u1";
  check_int32 (Stdlib__Int32_u.to_int32 t21.i32_0) (Stdlib__Int32_u.to_int32 t_orig21.i32_0) ~message:"t21.i32_0";
  check_string t22.str0 t_orig22.str0 ~message:"t22.str0";
  check_string t22.str1 t_orig22.str1 ~message:"t22.str1";
  check_float (Stdlib__Float_u.to_float t22.float_u2) (Stdlib__Float_u.to_float t_orig22.float_u2) ~message:"t22.float_u2";
  check_float t23.float0 t_orig23.float0 ~message:"t23.float0";
  check_float32 (Beta.Float32_u.to_float32 t23.float32_u1) (Beta.Float32_u.to_float32 t_orig23.float32_u1) ~message:"t23.float32_u1";
  check_string t24.str0 t_orig24.str0 ~message:"t24.str0";
  check_int32 (Stdlib__Int32_u.to_int32 t24.i32_1) (Stdlib__Int32_u.to_int32 t_orig24.i32_1) ~message:"t24.i32_1";
  check_int64 (Stdlib__Int64_u.to_int64 t25.i64_0) (Stdlib__Int64_u.to_int64 t_orig25.i64_0) ~message:"t25.i64_0";
  check_float t26.float0 t_orig26.float0 ~message:"t26.float0";
  check_string t26.str1 t_orig26.str1 ~message:"t26.str1";
  check_float (Stdlib__Float_u.to_float t26.float_u2) (Stdlib__Float_u.to_float t_orig26.float_u2) ~message:"t26.float_u2";
  check_string t27.str0 t_orig27.str0 ~message:"t27.str0";
  check_string t27.str1 t_orig27.str1 ~message:"t27.str1";
  check_float32 (Beta.Float32_u.to_float32 t27.float32_u2) (Beta.Float32_u.to_float32 t_orig27.float32_u2) ~message:"t27.float32_u2";
  check_float t28.float0 t_orig28.float0 ~message:"t28.float0";
  check_int32 (Stdlib__Int32_u.to_int32 t28.i32_1) (Stdlib__Int32_u.to_int32 t_orig28.i32_1) ~message:"t28.i32_1";
  check_string t29.str0 t_orig29.str0 ~message:"t29.str0";
  check_int64 (Stdlib__Int64_u.to_int64 t29.i64_1) (Stdlib__Int64_u.to_int64 t_orig29.i64_1) ~message:"t29.i64_1";
  check_int (Stdlib__Nativeint_u.to_int t30.n0) (Stdlib__Nativeint_u.to_int t_orig30.n0) ~message:"t30.n0";
  check_int t31.imm0 t_orig31.imm0 ~message:"t31.imm0";
  check_string t31.str1 t_orig31.str1 ~message:"t31.str1";
  check_float (Stdlib__Float_u.to_float t31.float_u2) (Stdlib__Float_u.to_float t_orig31.float_u2) ~message:"t31.float_u2";
  check_float t32.float0 t_orig32.float0 ~message:"t32.float0";
  check_string t32.str1 t_orig32.str1 ~message:"t32.str1";
  check_float32 (Beta.Float32_u.to_float32 t32.float32_u2) (Beta.Float32_u.to_float32 t_orig32.float32_u2) ~message:"t32.float32_u2";
  check_string t33.str0 t_orig33.str0 ~message:"t33.str0";
  check_string t33.str1 t_orig33.str1 ~message:"t33.str1";
  check_int32 (Stdlib__Int32_u.to_int32 t33.i32_2) (Stdlib__Int32_u.to_int32 t_orig33.i32_2) ~message:"t33.i32_2";
  check_float t34.float0 t_orig34.float0 ~message:"t34.float0";
  check_int64 (Stdlib__Int64_u.to_int64 t34.i64_1) (Stdlib__Int64_u.to_int64 t_orig34.i64_1) ~message:"t34.i64_1";
  check_string t35.str0 t_orig35.str0 ~message:"t35.str0";
  check_int (Stdlib__Nativeint_u.to_int t35.n1) (Stdlib__Nativeint_u.to_int t_orig35.n1) ~message:"t35.n1";
  check_float (Stdlib__Float_u.to_float t36.float_u0) (Stdlib__Float_u.to_float t_orig36.float_u0) ~message:"t36.float_u0";
  check_int t36.imm1 t_orig36.imm1 ~message:"t36.imm1";
  check_string t37.str0 t_orig37.str0 ~message:"t37.str0";
  check_float t37.float1 t_orig37.float1 ~message:"t37.float1";
  check_float (Stdlib__Float_u.to_float t37.float_u2) (Stdlib__Float_u.to_float t_orig37.float_u2) ~message:"t37.float_u2";
  check_int t38.imm0 t_orig38.imm0 ~message:"t38.imm0";
  check_string t38.str1 t_orig38.str1 ~message:"t38.str1";
  check_float32 (Beta.Float32_u.to_float32 t38.float32_u2) (Beta.Float32_u.to_float32 t_orig38.float32_u2) ~message:"t38.float32_u2";
  check_float t39.float0 t_orig39.float0 ~message:"t39.float0";
  check_string t39.str1 t_orig39.str1 ~message:"t39.str1";
  check_int32 (Stdlib__Int32_u.to_int32 t39.i32_2) (Stdlib__Int32_u.to_int32 t_orig39.i32_2) ~message:"t39.i32_2";
  check_string t40.str0 t_orig40.str0 ~message:"t40.str0";
  check_string t40.str1 t_orig40.str1 ~message:"t40.str1";
  check_int64 (Stdlib__Int64_u.to_int64 t40.i64_2) (Stdlib__Int64_u.to_int64 t_orig40.i64_2) ~message:"t40.i64_2";
  check_float t41.float0 t_orig41.float0 ~message:"t41.float0";
  check_int (Stdlib__Nativeint_u.to_int t41.n1) (Stdlib__Nativeint_u.to_int t_orig41.n1) ~message:"t41.n1";
  check_string t42.str0 t_orig42.str0 ~message:"t42.str0";
  check_float (Stdlib__Float_u.to_float t42.float_u1) (Stdlib__Float_u.to_float t_orig42.float_u1) ~message:"t42.float_u1";
  check_int t42.imm2 t_orig42.imm2 ~message:"t42.imm2";
  check_float32 (Beta.Float32_u.to_float32 t43.float32_u0) (Beta.Float32_u.to_float32 t_orig43.float32_u0) ~message:"t43.float32_u0";
  check_int t43.imm1 t_orig43.imm1 ~message:"t43.imm1";
  check_string t44.str0 t_orig44.str0 ~message:"t44.str0";
  check_float t44.float1 t_orig44.float1 ~message:"t44.float1";
  check_float32 (Beta.Float32_u.to_float32 t44.float32_u2) (Beta.Float32_u.to_float32 t_orig44.float32_u2) ~message:"t44.float32_u2";
  check_int t45.imm0 t_orig45.imm0 ~message:"t45.imm0";
  check_string t45.str1 t_orig45.str1 ~message:"t45.str1";
  check_int32 (Stdlib__Int32_u.to_int32 t45.i32_2) (Stdlib__Int32_u.to_int32 t_orig45.i32_2) ~message:"t45.i32_2";
  check_float t46.float0 t_orig46.float0 ~message:"t46.float0";
  check_string t46.str1 t_orig46.str1 ~message:"t46.str1";
  check_int64 (Stdlib__Int64_u.to_int64 t46.i64_2) (Stdlib__Int64_u.to_int64 t_orig46.i64_2) ~message:"t46.i64_2";
  check_string t47.str0 t_orig47.str0 ~message:"t47.str0";
  check_string t47.str1 t_orig47.str1 ~message:"t47.str1";
  check_int (Stdlib__Nativeint_u.to_int t47.n2) (Stdlib__Nativeint_u.to_int t_orig47.n2) ~message:"t47.n2";
  check_float t48.float0 t_orig48.float0 ~message:"t48.float0";
  check_float (Stdlib__Float_u.to_float t48.float_u1) (Stdlib__Float_u.to_float t_orig48.float_u1) ~message:"t48.float_u1";
  check_int t48.imm2 t_orig48.imm2 ~message:"t48.imm2";
  check_string t49.str0 t_orig49.str0 ~message:"t49.str0";
  check_float32 (Beta.Float32_u.to_float32 t49.float32_u1) (Beta.Float32_u.to_float32 t_orig49.float32_u1) ~message:"t49.float32_u1";
  check_int t49.imm2 t_orig49.imm2 ~message:"t49.imm2";
  check_int32 (Stdlib__Int32_u.to_int32 t50.i32_0) (Stdlib__Int32_u.to_int32 t_orig50.i32_0) ~message:"t50.i32_0";
  check_int t50.imm1 t_orig50.imm1 ~message:"t50.imm1";
  check_int t51.imm0 t_orig51.imm0 ~message:"t51.imm0";
  check_float t51.float1 t_orig51.float1 ~message:"t51.float1";
  check_float (Stdlib__Float_u.to_float t51.float_u2) (Stdlib__Float_u.to_float t_orig51.float_u2) ~message:"t51.float_u2";
  check_float t52.float0 t_orig52.float0 ~message:"t52.float0";
  check_float t52.float1 t_orig52.float1 ~message:"t52.float1";
  check_float32 (Beta.Float32_u.to_float32 t52.float32_u2) (Beta.Float32_u.to_float32 t_orig52.float32_u2) ~message:"t52.float32_u2";
  check_string t53.str0 t_orig53.str0 ~message:"t53.str0";
  check_float t53.float1 t_orig53.float1 ~message:"t53.float1";
  check_int32 (Stdlib__Int32_u.to_int32 t53.i32_2) (Stdlib__Int32_u.to_int32 t_orig53.i32_2) ~message:"t53.i32_2";
  check_int t54.imm0 t_orig54.imm0 ~message:"t54.imm0";
  check_string t54.str1 t_orig54.str1 ~message:"t54.str1";
  check_int64 (Stdlib__Int64_u.to_int64 t54.i64_2) (Stdlib__Int64_u.to_int64 t_orig54.i64_2) ~message:"t54.i64_2";
  check_float t55.float0 t_orig55.float0 ~message:"t55.float0";
  check_string t55.str1 t_orig55.str1 ~message:"t55.str1";
  check_int (Stdlib__Nativeint_u.to_int t55.n2) (Stdlib__Nativeint_u.to_int t_orig55.n2) ~message:"t55.n2";
  check_string t56.str0 t_orig56.str0 ~message:"t56.str0";
  check_string t56.str1 t_orig56.str1 ~message:"t56.str1";
  check_float (Stdlib__Float_u.to_float t56.float_u2) (Stdlib__Float_u.to_float t_orig56.float_u2) ~message:"t56.float_u2";
  check_int t56.imm3 t_orig56.imm3 ~message:"t56.imm3";
  check_float t57.float0 t_orig57.float0 ~message:"t57.float0";
  check_float32 (Beta.Float32_u.to_float32 t57.float32_u1) (Beta.Float32_u.to_float32 t_orig57.float32_u1) ~message:"t57.float32_u1";
  check_int t57.imm2 t_orig57.imm2 ~message:"t57.imm2";
  check_string t58.str0 t_orig58.str0 ~message:"t58.str0";
  check_int32 (Stdlib__Int32_u.to_int32 t58.i32_1) (Stdlib__Int32_u.to_int32 t_orig58.i32_1) ~message:"t58.i32_1";
  check_int t58.imm2 t_orig58.imm2 ~message:"t58.imm2";
  check_int64 (Stdlib__Int64_u.to_int64 t59.i64_0) (Stdlib__Int64_u.to_int64 t_orig59.i64_0) ~message:"t59.i64_0";
  check_int t59.imm1 t_orig59.imm1 ~message:"t59.imm1";
  check_string t60.str0 t_orig60.str0 ~message:"t60.str0";
  check_string t60.str1 t_orig60.str1 ~message:"t60.str1";
  check_string t60.str2 t_orig60.str2 ~message:"t60.str2";
  check_float (Stdlib__Float_u.to_float t60.float_u3) (Stdlib__Float_u.to_float t_orig60.float_u3) ~message:"t60.float_u3";
  check_int t61.imm0 t_orig61.imm0 ~message:"t61.imm0";
  check_float t61.float1 t_orig61.float1 ~message:"t61.float1";
  check_float32 (Beta.Float32_u.to_float32 t61.float32_u2) (Beta.Float32_u.to_float32 t_orig61.float32_u2) ~message:"t61.float32_u2";
  check_float t62.float0 t_orig62.float0 ~message:"t62.float0";
  check_float t62.float1 t_orig62.float1 ~message:"t62.float1";
  check_int32 (Stdlib__Int32_u.to_int32 t62.i32_2) (Stdlib__Int32_u.to_int32 t_orig62.i32_2) ~message:"t62.i32_2";
  check_string t63.str0 t_orig63.str0 ~message:"t63.str0";
  check_float t63.float1 t_orig63.float1 ~message:"t63.float1";
  check_int64 (Stdlib__Int64_u.to_int64 t63.i64_2) (Stdlib__Int64_u.to_int64 t_orig63.i64_2) ~message:"t63.i64_2";
  check_int t64.imm0 t_orig64.imm0 ~message:"t64.imm0";
  check_string t64.str1 t_orig64.str1 ~message:"t64.str1";
  check_int (Stdlib__Nativeint_u.to_int t64.n2) (Stdlib__Nativeint_u.to_int t_orig64.n2) ~message:"t64.n2";
  check_float t65.float0 t_orig65.float0 ~message:"t65.float0";
  check_string t65.str1 t_orig65.str1 ~message:"t65.str1";
  check_float (Stdlib__Float_u.to_float t65.float_u2) (Stdlib__Float_u.to_float t_orig65.float_u2) ~message:"t65.float_u2";
  check_int t65.imm3 t_orig65.imm3 ~message:"t65.imm3";
  check_string t66.str0 t_orig66.str0 ~message:"t66.str0";
  check_string t66.str1 t_orig66.str1 ~message:"t66.str1";
  check_float32 (Beta.Float32_u.to_float32 t66.float32_u2) (Beta.Float32_u.to_float32 t_orig66.float32_u2) ~message:"t66.float32_u2";
  check_int t66.imm3 t_orig66.imm3 ~message:"t66.imm3";
  check_float t67.float0 t_orig67.float0 ~message:"t67.float0";
  check_int32 (Stdlib__Int32_u.to_int32 t67.i32_1) (Stdlib__Int32_u.to_int32 t_orig67.i32_1) ~message:"t67.i32_1";
  check_int t67.imm2 t_orig67.imm2 ~message:"t67.imm2";
  check_string t68.str0 t_orig68.str0 ~message:"t68.str0";
  check_int64 (Stdlib__Int64_u.to_int64 t68.i64_1) (Stdlib__Int64_u.to_int64 t_orig68.i64_1) ~message:"t68.i64_1";
  check_int t68.imm2 t_orig68.imm2 ~message:"t68.imm2";
  check_int (Stdlib__Nativeint_u.to_int t69.n0) (Stdlib__Nativeint_u.to_int t_orig69.n0) ~message:"t69.n0";
  check_int t69.imm1 t_orig69.imm1 ~message:"t69.imm1";
  check_float t70.float0 t_orig70.float0 ~message:"t70.float0";
  check_string t70.str1 t_orig70.str1 ~message:"t70.str1";
  check_string t70.str2 t_orig70.str2 ~message:"t70.str2";
  check_float (Stdlib__Float_u.to_float t70.float_u3) (Stdlib__Float_u.to_float t_orig70.float_u3) ~message:"t70.float_u3";
  check_string t71.str0 t_orig71.str0 ~message:"t71.str0";
  check_string t71.str1 t_orig71.str1 ~message:"t71.str1";
  check_string t71.str2 t_orig71.str2 ~message:"t71.str2";
  check_float32 (Beta.Float32_u.to_float32 t71.float32_u3) (Beta.Float32_u.to_float32 t_orig71.float32_u3) ~message:"t71.float32_u3";
  check_int t72.imm0 t_orig72.imm0 ~message:"t72.imm0";
  check_float t72.float1 t_orig72.float1 ~message:"t72.float1";
  check_int32 (Stdlib__Int32_u.to_int32 t72.i32_2) (Stdlib__Int32_u.to_int32 t_orig72.i32_2) ~message:"t72.i32_2";
  check_float t73.float0 t_orig73.float0 ~message:"t73.float0";
  check_float t73.float1 t_orig73.float1 ~message:"t73.float1";
  check_int64 (Stdlib__Int64_u.to_int64 t73.i64_2) (Stdlib__Int64_u.to_int64 t_orig73.i64_2) ~message:"t73.i64_2";
  check_string t74.str0 t_orig74.str0 ~message:"t74.str0";
  check_float t74.float1 t_orig74.float1 ~message:"t74.float1";
  check_int (Stdlib__Nativeint_u.to_int t74.n2) (Stdlib__Nativeint_u.to_int t_orig74.n2) ~message:"t74.n2";
  let () = match t75_A, t_orig75_A with
      | A (a0), A (b0) -> check_float (Stdlib__Float_u.to_float a0) (Stdlib__Float_u.to_float b0) ~message:"t75_A.0";
      | _ -> assert false
    in
  let () = match t75_B, t_orig75_B with
      | B (a0,a1), B (b0,b1) -> check_string a0 b0 ~message:"t75_B.0";
check_float (Stdlib__Float_u.to_float a1) (Stdlib__Float_u.to_float b1) ~message:"t75_B.1";
      | _ -> assert false
    in
  let () = match t76_A, t_orig76_A with
      | A (a0), A (b0) -> check_float32 (Beta.Float32_u.to_float32 a0) (Beta.Float32_u.to_float32 b0) ~message:"t76_A.0";
      | _ -> assert false
    in
  let () = match t76_B, t_orig76_B with
      | B (a0,a1), B (b0,b1) -> check_float a0 b0 ~message:"t76_B.0";
check_float (Stdlib__Float_u.to_float a1) (Stdlib__Float_u.to_float b1) ~message:"t76_B.1";
      | _ -> assert false
    in
  let () = match t77_A, t_orig77_A with
      | A (a0,a1), A (b0,b1) -> check_string a0 b0 ~message:"t77_A.0";
check_float32 (Beta.Float32_u.to_float32 a1) (Beta.Float32_u.to_float32 b1) ~message:"t77_A.1";
      | _ -> assert false
    in
  let () = match t77_B, t_orig77_B with
      | B (a0), B (b0) -> check_int32 (Stdlib__Int32_u.to_int32 a0) (Stdlib__Int32_u.to_int32 b0) ~message:"t77_B.0";
      | _ -> assert false
    in
  let () = match t78_A, t_orig78_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t78_A.0";
check_string a1 b1 ~message:"t78_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t78_A.2";
      | _ -> assert false
    in
  let () = match t78_B, t_orig78_B with
      | B (a0,a1), B (b0,b1) -> check_float a0 b0 ~message:"t78_B.0";
check_float32 (Beta.Float32_u.to_float32 a1) (Beta.Float32_u.to_float32 b1) ~message:"t78_B.1";
      | _ -> assert false
    in
  let () = match t79_A, t_orig79_A with
      | A (a0,a1), A (b0,b1) -> check_string a0 b0 ~message:"t79_A.0";
check_int32 (Stdlib__Int32_u.to_int32 a1) (Stdlib__Int32_u.to_int32 b1) ~message:"t79_A.1";
      | _ -> assert false
    in
  let () = match t79_B, t_orig79_B with
      | B (a0), B (b0) -> check_int64 (Stdlib__Int64_u.to_int64 a0) (Stdlib__Int64_u.to_int64 b0) ~message:"t79_B.0";
      | _ -> assert false
    in
  let () = match t80_A, t_orig80_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t80_A.0";
check_string a1 b1 ~message:"t80_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t80_A.2";
      | _ -> assert false
    in
  let () = match t80_B, t_orig80_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t80_B.0";
check_string a1 b1 ~message:"t80_B.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t80_B.2";
      | _ -> assert false
    in
  let () = match t81_A, t_orig81_A with
      | A (a0,a1), A (b0,b1) -> check_float a0 b0 ~message:"t81_A.0";
check_int32 (Stdlib__Int32_u.to_int32 a1) (Stdlib__Int32_u.to_int32 b1) ~message:"t81_A.1";
      | _ -> assert false
    in
  let () = match t81_B, t_orig81_B with
      | B (a0,a1), B (b0,b1) -> check_string a0 b0 ~message:"t81_B.0";
check_int64 (Stdlib__Int64_u.to_int64 a1) (Stdlib__Int64_u.to_int64 b1) ~message:"t81_B.1";
      | _ -> assert false
    in
  let () = match t82_A, t_orig82_A with
      | A (a0), A (b0) -> check_int (Stdlib__Nativeint_u.to_int a0) (Stdlib__Nativeint_u.to_int b0) ~message:"t82_A.0";
      | _ -> assert false
    in
  let () = match t82_B, t_orig82_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_int a0 b0 ~message:"t82_B.0";
check_string a1 b1 ~message:"t82_B.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t82_B.2";
      | _ -> assert false
    in
  let () = match t83_A, t_orig83_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t83_A.0";
check_string a1 b1 ~message:"t83_A.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t83_A.2";
      | _ -> assert false
    in
  let () = match t83_B, t_orig83_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t83_B.0";
check_string a1 b1 ~message:"t83_B.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t83_B.2";
      | _ -> assert false
    in
  let () = match t84_A, t_orig84_A with
      | A (a0,a1), A (b0,b1) -> check_float a0 b0 ~message:"t84_A.0";
check_int64 (Stdlib__Int64_u.to_int64 a1) (Stdlib__Int64_u.to_int64 b1) ~message:"t84_A.1";
      | _ -> assert false
    in
  let () = match t84_B, t_orig84_B with
      | B (a0,a1), B (b0,b1) -> check_string a0 b0 ~message:"t84_B.0";
check_int (Stdlib__Nativeint_u.to_int a1) (Stdlib__Nativeint_u.to_int b1) ~message:"t84_B.1";
      | _ -> assert false
    in
  let () = match t85_A, t_orig85_A with
      | A (a0,a1), A (b0,b1) -> check_float (Stdlib__Float_u.to_float a0) (Stdlib__Float_u.to_float b0) ~message:"t85_A.0";
check_int a1 b1 ~message:"t85_A.1";
      | _ -> assert false
    in
  let () = match t85_B, t_orig85_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t85_B.0";
check_float a1 b1 ~message:"t85_B.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t85_B.2";
      | _ -> assert false
    in
  let () = match t86_A, t_orig86_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_int a0 b0 ~message:"t86_A.0";
check_string a1 b1 ~message:"t86_A.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t86_A.2";
      | _ -> assert false
    in
  let () = match t86_B, t_orig86_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t86_B.0";
check_string a1 b1 ~message:"t86_B.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t86_B.2";
      | _ -> assert false
    in
  let () = match t87_A, t_orig87_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t87_A.0";
check_string a1 b1 ~message:"t87_A.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t87_A.2";
      | _ -> assert false
    in
  let () = match t87_B, t_orig87_B with
      | B (a0,a1), B (b0,b1) -> check_float a0 b0 ~message:"t87_B.0";
check_int (Stdlib__Nativeint_u.to_int a1) (Stdlib__Nativeint_u.to_int b1) ~message:"t87_B.1";
      | _ -> assert false
    in
  let () = match t88_A, t_orig88_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t88_A.0";
check_float (Stdlib__Float_u.to_float a1) (Stdlib__Float_u.to_float b1) ~message:"t88_A.1";
check_int a2 b2 ~message:"t88_A.2";
      | _ -> assert false
    in
  let () = match t88_B, t_orig88_B with
      | B (a0,a1), B (b0,b1) -> check_float32 (Beta.Float32_u.to_float32 a0) (Beta.Float32_u.to_float32 b0) ~message:"t88_B.0";
check_int a1 b1 ~message:"t88_B.1";
      | _ -> assert false
    in
  let () = match t89_A, t_orig89_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t89_A.0";
check_float a1 b1 ~message:"t89_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t89_A.2";
      | _ -> assert false
    in
  let () = match t89_B, t_orig89_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t89_B.0";
check_float a1 b1 ~message:"t89_B.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t89_B.2";
      | _ -> assert false
    in
  let () = match t90_A, t_orig90_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_int a0 b0 ~message:"t90_A.0";
check_string a1 b1 ~message:"t90_A.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t90_A.2";
      | _ -> assert false
    in
  let () = match t90_B, t_orig90_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t90_B.0";
check_string a1 b1 ~message:"t90_B.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t90_B.2";
      | _ -> assert false
    in
  let () = match t91_A, t_orig91_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t91_A.0";
check_string a1 b1 ~message:"t91_A.1";
check_int (Stdlib__Nativeint_u.to_int a2) (Stdlib__Nativeint_u.to_int b2) ~message:"t91_A.2";
      | _ -> assert false
    in
  let () = match t91_B, t_orig91_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t91_B.0";
check_float (Stdlib__Float_u.to_float a1) (Stdlib__Float_u.to_float b1) ~message:"t91_B.1";
check_int a2 b2 ~message:"t91_B.2";
      | _ -> assert false
    in
  let () = match t92_A, t_orig92_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t92_A.0";
check_float32 (Beta.Float32_u.to_float32 a1) (Beta.Float32_u.to_float32 b1) ~message:"t92_A.1";
check_int a2 b2 ~message:"t92_A.2";
      | _ -> assert false
    in
  let () = match t92_B, t_orig92_B with
      | B (a0,a1), B (b0,b1) -> check_int32 (Stdlib__Int32_u.to_int32 a0) (Stdlib__Int32_u.to_int32 b0) ~message:"t92_B.0";
check_int a1 b1 ~message:"t92_B.1";
      | _ -> assert false
    in
  let () = match t93_A, t_orig93_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_int a0 b0 ~message:"t93_A.0";
check_float a1 b1 ~message:"t93_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t93_A.2";
      | _ -> assert false
    in
  let () = match t93_B, t_orig93_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t93_B.0";
check_float a1 b1 ~message:"t93_B.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t93_B.2";
      | _ -> assert false
    in
  let () = match t94_A, t_orig94_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t94_A.0";
check_float a1 b1 ~message:"t94_A.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t94_A.2";
      | _ -> assert false
    in
  let () = match t94_B, t_orig94_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_int a0 b0 ~message:"t94_B.0";
check_string a1 b1 ~message:"t94_B.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t94_B.2";
      | _ -> assert false
    in
  let () = match t95_A, t_orig95_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t95_A.0";
check_string a1 b1 ~message:"t95_A.1";
check_int (Stdlib__Nativeint_u.to_int a2) (Stdlib__Nativeint_u.to_int b2) ~message:"t95_A.2";
      | _ -> assert false
    in
  let () = match t95_B, t_orig95_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t95_B.0";
check_string a1 b1 ~message:"t95_B.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t95_B.2";
check_int a3 b3 ~message:"t95_B.3";
      | _ -> assert false
    in
  let () = match t96_A, t_orig96_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t96_A.0";
check_float32 (Beta.Float32_u.to_float32 a1) (Beta.Float32_u.to_float32 b1) ~message:"t96_A.1";
check_int a2 b2 ~message:"t96_A.2";
      | _ -> assert false
    in
  let () = match t96_B, t_orig96_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t96_B.0";
check_int32 (Stdlib__Int32_u.to_int32 a1) (Stdlib__Int32_u.to_int32 b1) ~message:"t96_B.1";
check_int a2 b2 ~message:"t96_B.2";
      | _ -> assert false
    in
  let () = match t97_A, t_orig97_A with
      | A (a0,a1), A (b0,b1) -> check_int64 (Stdlib__Int64_u.to_int64 a0) (Stdlib__Int64_u.to_int64 b0) ~message:"t97_A.0";
check_int a1 b1 ~message:"t97_A.1";
      | _ -> assert false
    in
  let () = match t97_B, t_orig97_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t97_B.0";
check_string a1 b1 ~message:"t97_B.1";
check_string a2 b2 ~message:"t97_B.2";
check_float (Stdlib__Float_u.to_float a3) (Stdlib__Float_u.to_float b3) ~message:"t97_B.3";
      | _ -> assert false
    in
  let () = match t98_A, t_orig98_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_int a0 b0 ~message:"t98_A.0";
check_float a1 b1 ~message:"t98_A.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t98_A.2";
      | _ -> assert false
    in
  let () = match t98_B, t_orig98_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t98_B.0";
check_float a1 b1 ~message:"t98_B.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t98_B.2";
      | _ -> assert false
    in
  let () = match t99_A, t_orig99_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t99_A.0";
check_float a1 b1 ~message:"t99_A.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t99_A.2";
      | _ -> assert false
    in
  let () = match t99_B, t_orig99_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_int a0 b0 ~message:"t99_B.0";
check_string a1 b1 ~message:"t99_B.1";
check_int (Stdlib__Nativeint_u.to_int a2) (Stdlib__Nativeint_u.to_int b2) ~message:"t99_B.2";
      | _ -> assert false
    in
  let () = match t100_A, t_orig100_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_float a0 b0 ~message:"t100_A.0";
check_string a1 b1 ~message:"t100_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t100_A.2";
check_int a3 b3 ~message:"t100_A.3";
      | _ -> assert false
    in
  let () = match t100_B, t_orig100_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t100_B.0";
check_string a1 b1 ~message:"t100_B.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t100_B.2";
check_int a3 b3 ~message:"t100_B.3";
      | _ -> assert false
    in
  let () = match t101_A, t_orig101_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t101_A.0";
check_int32 (Stdlib__Int32_u.to_int32 a1) (Stdlib__Int32_u.to_int32 b1) ~message:"t101_A.1";
check_int a2 b2 ~message:"t101_A.2";
      | _ -> assert false
    in
  let () = match t101_B, t_orig101_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t101_B.0";
check_int64 (Stdlib__Int64_u.to_int64 a1) (Stdlib__Int64_u.to_int64 b1) ~message:"t101_B.1";
check_int a2 b2 ~message:"t101_B.2";
      | _ -> assert false
    in
  let () = match t102_A, t_orig102_A with
      | A (a0,a1), A (b0,b1) -> check_int (Stdlib__Nativeint_u.to_int a0) (Stdlib__Nativeint_u.to_int b0) ~message:"t102_A.0";
check_int a1 b1 ~message:"t102_A.1";
      | _ -> assert false
    in
  let () = match t102_B, t_orig102_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_float a0 b0 ~message:"t102_B.0";
check_string a1 b1 ~message:"t102_B.1";
check_string a2 b2 ~message:"t102_B.2";
check_float (Stdlib__Float_u.to_float a3) (Stdlib__Float_u.to_float b3) ~message:"t102_B.3";
      | _ -> assert false
    in
  let () = match t103_A, t_orig103_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t103_A.0";
check_string a1 b1 ~message:"t103_A.1";
check_string a2 b2 ~message:"t103_A.2";
check_float32 (Beta.Float32_u.to_float32 a3) (Beta.Float32_u.to_float32 b3) ~message:"t103_A.3";
      | _ -> assert false
    in
  let () = match t103_B, t_orig103_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_int a0 b0 ~message:"t103_B.0";
check_float a1 b1 ~message:"t103_B.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t103_B.2";
      | _ -> assert false
    in
  let () = match t104_A, t_orig104_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t104_A.0";
check_float a1 b1 ~message:"t104_A.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t104_A.2";
      | _ -> assert false
    in
  let () = match t104_B, t_orig104_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_string a0 b0 ~message:"t104_B.0";
check_float a1 b1 ~message:"t104_B.1";
check_int (Stdlib__Nativeint_u.to_int a2) (Stdlib__Nativeint_u.to_int b2) ~message:"t104_B.2";
      | _ -> assert false
    in
  let () = match t105_A, t_orig105_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_int a0 b0 ~message:"t105_A.0";
check_string a1 b1 ~message:"t105_A.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t105_A.2";
check_int a3 b3 ~message:"t105_A.3";
      | _ -> assert false
    in
  let () = match t105_B, t_orig105_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_float a0 b0 ~message:"t105_B.0";
check_string a1 b1 ~message:"t105_B.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t105_B.2";
check_int a3 b3 ~message:"t105_B.3";
      | _ -> assert false
    in
  let () = match t106_A, t_orig106_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t106_A.0";
check_string a1 b1 ~message:"t106_A.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t106_A.2";
check_int a3 b3 ~message:"t106_A.3";
      | _ -> assert false
    in
  let () = match t106_B, t_orig106_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_float a0 b0 ~message:"t106_B.0";
check_int64 (Stdlib__Int64_u.to_int64 a1) (Stdlib__Int64_u.to_int64 b1) ~message:"t106_B.1";
check_int a2 b2 ~message:"t106_B.2";
      | _ -> assert false
    in
  let () = match t107_A, t_orig107_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_string a0 b0 ~message:"t107_A.0";
check_int (Stdlib__Nativeint_u.to_int a1) (Stdlib__Nativeint_u.to_int b1) ~message:"t107_A.1";
check_int a2 b2 ~message:"t107_A.2";
      | _ -> assert false
    in
  let () = match t107_B, t_orig107_B with
      | B (a0,a1), B (b0,b1) -> check_float (Stdlib__Float_u.to_float a0) (Stdlib__Float_u.to_float b0) ~message:"t107_B.0";
check_int (Int63.to_int a1) (Int63.to_int b1) ~message:"t107_B.1";
      | _ -> assert false
    in
  let () = match t108_A, t_orig108_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_int a0 b0 ~message:"t108_A.0";
check_string a1 b1 ~message:"t108_A.1";
check_string a2 b2 ~message:"t108_A.2";
check_float (Stdlib__Float_u.to_float a3) (Stdlib__Float_u.to_float b3) ~message:"t108_A.3";
      | _ -> assert false
    in
  let () = match t108_B, t_orig108_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_float a0 b0 ~message:"t108_B.0";
check_string a1 b1 ~message:"t108_B.1";
check_string a2 b2 ~message:"t108_B.2";
check_float32 (Beta.Float32_u.to_float32 a3) (Beta.Float32_u.to_float32 b3) ~message:"t108_B.3";
      | _ -> assert false
    in
  let () = match t109_A, t_orig109_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t109_A.0";
check_string a1 b1 ~message:"t109_A.1";
check_string a2 b2 ~message:"t109_A.2";
check_int32 (Stdlib__Int32_u.to_int32 a3) (Stdlib__Int32_u.to_int32 b3) ~message:"t109_A.3";
      | _ -> assert false
    in
  let () = match t109_B, t_orig109_B with
      | B (a0,a1,a2), B (b0,b1,b2) -> check_int a0 b0 ~message:"t109_B.0";
check_float a1 b1 ~message:"t109_B.1";
check_int64 (Stdlib__Int64_u.to_int64 a2) (Stdlib__Int64_u.to_int64 b2) ~message:"t109_B.2";
      | _ -> assert false
    in
  let () = match t110_A, t_orig110_A with
      | A (a0,a1,a2), A (b0,b1,b2) -> check_float a0 b0 ~message:"t110_A.0";
check_float a1 b1 ~message:"t110_A.1";
check_int (Stdlib__Nativeint_u.to_int a2) (Stdlib__Nativeint_u.to_int b2) ~message:"t110_A.2";
      | _ -> assert false
    in
  let () = match t110_B, t_orig110_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_string a0 b0 ~message:"t110_B.0";
check_float a1 b1 ~message:"t110_B.1";
check_float (Stdlib__Float_u.to_float a2) (Stdlib__Float_u.to_float b2) ~message:"t110_B.2";
check_int a3 b3 ~message:"t110_B.3";
      | _ -> assert false
    in
  let () = match t111_A, t_orig111_A with
      | A (a0,a1,a2,a3), A (b0,b1,b2,b3) -> check_int a0 b0 ~message:"t111_A.0";
check_string a1 b1 ~message:"t111_A.1";
check_float32 (Beta.Float32_u.to_float32 a2) (Beta.Float32_u.to_float32 b2) ~message:"t111_A.2";
check_int a3 b3 ~message:"t111_A.3";
      | _ -> assert false
    in
  let () = match t111_B, t_orig111_B with
      | B (a0,a1,a2,a3), B (b0,b1,b2,b3) -> check_float a0 b0 ~message:"t111_B.0";
check_string a1 b1 ~message:"t111_B.1";
check_int32 (Stdlib__Int32_u.to_int32 a2) (Stdlib__Int32_u.to_int32 b2) ~message:"t111_B.2";
check_int a3 b3 ~message:"t111_B.3";
      | _ -> assert false
    in
  print_endline "    - Checking [Obj.reachable_words]";
  check_reachable_words (Obj.reachable_words (Obj.repr t0)) (3) "Reachable words 0";
  check_reachable_words (Obj.reachable_words (Obj.repr t1)) (3) "Reachable words 1";
  check_reachable_words (Obj.reachable_words (Obj.repr t2)) (4) "Reachable words 2";
  check_reachable_words (Obj.reachable_words (Obj.repr t3)) (4) "Reachable words 3";
  check_reachable_words (Obj.reachable_words (Obj.repr t4)) (4) "Reachable words 4";
  check_reachable_words (Obj.reachable_words (Obj.repr t5)) (4) "Reachable words 5";
  check_reachable_words (Obj.reachable_words (Obj.repr t6)) (4) "Reachable words 6";
  check_reachable_words (Obj.reachable_words (Obj.repr t7)) (4) "Reachable words 7";
  check_reachable_words (Obj.reachable_words (Obj.repr t8)) (5) "Reachable words 8";
  check_reachable_words (Obj.reachable_words (Obj.repr t9)) (5) "Reachable words 9";
  check_reachable_words (Obj.reachable_words (Obj.repr t10)) (5) "Reachable words 10";
  check_reachable_words (Obj.reachable_words (Obj.repr t11)) (5) "Reachable words 11";
  check_reachable_words (Obj.reachable_words (Obj.repr t12)) (5) "Reachable words 12";
  check_reachable_words (Obj.reachable_words (Obj.repr t13)) (5) "Reachable words 13";
  check_reachable_words (Obj.reachable_words (Obj.repr t14)) (5) "Reachable words 14";
  check_reachable_words (Obj.reachable_words (Obj.repr t15)) (5) "Reachable words 15";
  check_reachable_words (Obj.reachable_words (Obj.repr t16)) (5) "Reachable words 16";
  check_reachable_words (Obj.reachable_words (Obj.repr t17)) (5) "Reachable words 17";
  check_reachable_words (Obj.reachable_words (Obj.repr t18)) (3 + Obj.reachable_words (Obj.repr t18.str0)) "Reachable words 18";
  check_reachable_words (Obj.reachable_words (Obj.repr t19)) (2) "Reachable words 19";
  check_reachable_words (Obj.reachable_words (Obj.repr t20)) (3 + Obj.reachable_words (Obj.repr t20.str0)) "Reachable words 20";
  check_reachable_words (Obj.reachable_words (Obj.repr t21)) (2) "Reachable words 21";
  check_reachable_words (Obj.reachable_words (Obj.repr t22)) (4 + Obj.reachable_words (Obj.repr t22.str0) + Obj.reachable_words (Obj.repr t22.str1)) "Reachable words 22";
  check_reachable_words (Obj.reachable_words (Obj.repr t23)) (3 + 2) "Reachable words 23";
  check_reachable_words (Obj.reachable_words (Obj.repr t24)) (3 + Obj.reachable_words (Obj.repr t24.str0)) "Reachable words 24";
  check_reachable_words (Obj.reachable_words (Obj.repr t25)) (2) "Reachable words 25";
  check_reachable_words (Obj.reachable_words (Obj.repr t26)) (4 + 2 + Obj.reachable_words (Obj.repr t26.str1)) "Reachable words 26";
  check_reachable_words (Obj.reachable_words (Obj.repr t27)) (4 + Obj.reachable_words (Obj.repr t27.str0) + Obj.reachable_words (Obj.repr t27.str1)) "Reachable words 27";
  check_reachable_words (Obj.reachable_words (Obj.repr t28)) (3 + 2) "Reachable words 28";
  check_reachable_words (Obj.reachable_words (Obj.repr t29)) (3 + Obj.reachable_words (Obj.repr t29.str0)) "Reachable words 29";
  check_reachable_words (Obj.reachable_words (Obj.repr t30)) (2) "Reachable words 30";
  check_reachable_words (Obj.reachable_words (Obj.repr t31)) (4 + Obj.reachable_words (Obj.repr t31.str1)) "Reachable words 31";
  check_reachable_words (Obj.reachable_words (Obj.repr t32)) (4 + 2 + Obj.reachable_words (Obj.repr t32.str1)) "Reachable words 32";
  check_reachable_words (Obj.reachable_words (Obj.repr t33)) (4 + Obj.reachable_words (Obj.repr t33.str0) + Obj.reachable_words (Obj.repr t33.str1)) "Reachable words 33";
  check_reachable_words (Obj.reachable_words (Obj.repr t34)) (3 + 2) "Reachable words 34";
  check_reachable_words (Obj.reachable_words (Obj.repr t35)) (3 + Obj.reachable_words (Obj.repr t35.str0)) "Reachable words 35";
  check_reachable_words (Obj.reachable_words (Obj.repr t36)) (3) "Reachable words 36";
  check_reachable_words (Obj.reachable_words (Obj.repr t37)) (4 + Obj.reachable_words (Obj.repr t37.str0) + 2) "Reachable words 37";
  check_reachable_words (Obj.reachable_words (Obj.repr t38)) (4 + Obj.reachable_words (Obj.repr t38.str1)) "Reachable words 38";
  check_reachable_words (Obj.reachable_words (Obj.repr t39)) (4 + 2 + Obj.reachable_words (Obj.repr t39.str1)) "Reachable words 39";
  check_reachable_words (Obj.reachable_words (Obj.repr t40)) (4 + Obj.reachable_words (Obj.repr t40.str0) + Obj.reachable_words (Obj.repr t40.str1)) "Reachable words 40";
  check_reachable_words (Obj.reachable_words (Obj.repr t41)) (3 + 2) "Reachable words 41";
  check_reachable_words (Obj.reachable_words (Obj.repr t42)) (4 + Obj.reachable_words (Obj.repr t42.str0)) "Reachable words 42";
  check_reachable_words (Obj.reachable_words (Obj.repr t43)) (3) "Reachable words 43";
  check_reachable_words (Obj.reachable_words (Obj.repr t44)) (4 + Obj.reachable_words (Obj.repr t44.str0) + 2) "Reachable words 44";
  check_reachable_words (Obj.reachable_words (Obj.repr t45)) (4 + Obj.reachable_words (Obj.repr t45.str1)) "Reachable words 45";
  check_reachable_words (Obj.reachable_words (Obj.repr t46)) (4 + 2 + Obj.reachable_words (Obj.repr t46.str1)) "Reachable words 46";
  check_reachable_words (Obj.reachable_words (Obj.repr t47)) (4 + Obj.reachable_words (Obj.repr t47.str0) + Obj.reachable_words (Obj.repr t47.str1)) "Reachable words 47";
  check_reachable_words (Obj.reachable_words (Obj.repr t48)) (4 + 2) "Reachable words 48";
  check_reachable_words (Obj.reachable_words (Obj.repr t49)) (4 + Obj.reachable_words (Obj.repr t49.str0)) "Reachable words 49";
  check_reachable_words (Obj.reachable_words (Obj.repr t50)) (3) "Reachable words 50";
  check_reachable_words (Obj.reachable_words (Obj.repr t51)) (4 + 2) "Reachable words 51";
  check_reachable_words (Obj.reachable_words (Obj.repr t52)) (4 + 2 + 2) "Reachable words 52";
  check_reachable_words (Obj.reachable_words (Obj.repr t53)) (4 + Obj.reachable_words (Obj.repr t53.str0) + 2) "Reachable words 53";
  check_reachable_words (Obj.reachable_words (Obj.repr t54)) (4 + Obj.reachable_words (Obj.repr t54.str1)) "Reachable words 54";
  check_reachable_words (Obj.reachable_words (Obj.repr t55)) (4 + 2 + Obj.reachable_words (Obj.repr t55.str1)) "Reachable words 55";
  check_reachable_words (Obj.reachable_words (Obj.repr t56)) (5 + Obj.reachable_words (Obj.repr t56.str0) + Obj.reachable_words (Obj.repr t56.str1)) "Reachable words 56";
  check_reachable_words (Obj.reachable_words (Obj.repr t57)) (4 + 2) "Reachable words 57";
  check_reachable_words (Obj.reachable_words (Obj.repr t58)) (4 + Obj.reachable_words (Obj.repr t58.str0)) "Reachable words 58";
  check_reachable_words (Obj.reachable_words (Obj.repr t59)) (3) "Reachable words 59";
  check_reachable_words (Obj.reachable_words (Obj.repr t60)) (5 + Obj.reachable_words (Obj.repr t60.str0) + Obj.reachable_words (Obj.repr t60.str1) + Obj.reachable_words (Obj.repr t60.str2)) "Reachable words 60";
  check_reachable_words (Obj.reachable_words (Obj.repr t61)) (4 + 2) "Reachable words 61";
  check_reachable_words (Obj.reachable_words (Obj.repr t62)) (4 + 2 + 2) "Reachable words 62";
  check_reachable_words (Obj.reachable_words (Obj.repr t63)) (4 + Obj.reachable_words (Obj.repr t63.str0) + 2) "Reachable words 63";
  check_reachable_words (Obj.reachable_words (Obj.repr t64)) (4 + Obj.reachable_words (Obj.repr t64.str1)) "Reachable words 64";
  check_reachable_words (Obj.reachable_words (Obj.repr t65)) (5 + 2 + Obj.reachable_words (Obj.repr t65.str1)) "Reachable words 65";
  check_reachable_words (Obj.reachable_words (Obj.repr t66)) (5 + Obj.reachable_words (Obj.repr t66.str0) + Obj.reachable_words (Obj.repr t66.str1)) "Reachable words 66";
  check_reachable_words (Obj.reachable_words (Obj.repr t67)) (4 + 2) "Reachable words 67";
  check_reachable_words (Obj.reachable_words (Obj.repr t68)) (4 + Obj.reachable_words (Obj.repr t68.str0)) "Reachable words 68";
  check_reachable_words (Obj.reachable_words (Obj.repr t69)) (3) "Reachable words 69";
  check_reachable_words (Obj.reachable_words (Obj.repr t70)) (5 + 2 + Obj.reachable_words (Obj.repr t70.str1) + Obj.reachable_words (Obj.repr t70.str2)) "Reachable words 70";
  check_reachable_words (Obj.reachable_words (Obj.repr t71)) (5 + Obj.reachable_words (Obj.repr t71.str0) + Obj.reachable_words (Obj.repr t71.str1) + Obj.reachable_words (Obj.repr t71.str2)) "Reachable words 71";
  check_reachable_words (Obj.reachable_words (Obj.repr t72)) (4 + 2) "Reachable words 72";
  check_reachable_words (Obj.reachable_words (Obj.repr t73)) (4 + 2 + 2) "Reachable words 73";
  check_reachable_words (Obj.reachable_words (Obj.repr t74)) (4 + Obj.reachable_words (Obj.repr t74.str0) + 2) "Reachable words 74";
  ();;
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;
let () = print_endline " - Doing GC";;
let () = Gc.full_major ();;
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;
let () = print_endline "Copying values via [Stdlib.Weak]";;
let t0 : t0 = copy_via_weak t0
let t1 : t1 = copy_via_weak t1
let t2 : t2 = copy_via_weak t2
let t3 : t3 = copy_via_weak t3
let t4 : t4 = copy_via_weak t4
let t5 : t5 = copy_via_weak t5
let t6 : t6 = copy_via_weak t6
let t7 : t7 = copy_via_weak t7
let t8 : t8 = copy_via_weak t8
let t9 : t9 = copy_via_weak t9
let t10 : t10 = copy_via_weak t10
let t11 : t11 = copy_via_weak t11
let t12 : t12 = copy_via_weak t12
let t13 : t13 = copy_via_weak t13
let t14 : t14 = copy_via_weak t14
let t15 : t15 = copy_via_weak t15
let t16 : t16 = copy_via_weak t16
let t17 : t17 = copy_via_weak t17
let t18 : t18 = copy_via_weak t18
let t19 : t19 = copy_via_weak t19
let t20 : t20 = copy_via_weak t20
let t21 : t21 = copy_via_weak t21
let t22 : t22 = copy_via_weak t22
let t23 : t23 = copy_via_weak t23
let t24 : t24 = copy_via_weak t24
let t25 : t25 = copy_via_weak t25
let t26 : t26 = copy_via_weak t26
let t27 : t27 = copy_via_weak t27
let t28 : t28 = copy_via_weak t28
let t29 : t29 = copy_via_weak t29
let t30 : t30 = copy_via_weak t30
let t31 : t31 = copy_via_weak t31
let t32 : t32 = copy_via_weak t32
let t33 : t33 = copy_via_weak t33
let t34 : t34 = copy_via_weak t34
let t35 : t35 = copy_via_weak t35
let t36 : t36 = copy_via_weak t36
let t37 : t37 = copy_via_weak t37
let t38 : t38 = copy_via_weak t38
let t39 : t39 = copy_via_weak t39
let t40 : t40 = copy_via_weak t40
let t41 : t41 = copy_via_weak t41
let t42 : t42 = copy_via_weak t42
let t43 : t43 = copy_via_weak t43
let t44 : t44 = copy_via_weak t44
let t45 : t45 = copy_via_weak t45
let t46 : t46 = copy_via_weak t46
let t47 : t47 = copy_via_weak t47
let t48 : t48 = copy_via_weak t48
let t49 : t49 = copy_via_weak t49
let t50 : t50 = copy_via_weak t50
let t51 : t51 = copy_via_weak t51
let t52 : t52 = copy_via_weak t52
let t53 : t53 = copy_via_weak t53
let t54 : t54 = copy_via_weak t54
let t55 : t55 = copy_via_weak t55
let t56 : t56 = copy_via_weak t56
let t57 : t57 = copy_via_weak t57
let t58 : t58 = copy_via_weak t58
let t59 : t59 = copy_via_weak t59
let t60 : t60 = copy_via_weak t60
let t61 : t61 = copy_via_weak t61
let t62 : t62 = copy_via_weak t62
let t63 : t63 = copy_via_weak t63
let t64 : t64 = copy_via_weak t64
let t65 : t65 = copy_via_weak t65
let t66 : t66 = copy_via_weak t66
let t67 : t67 = copy_via_weak t67
let t68 : t68 = copy_via_weak t68
let t69 : t69 = copy_via_weak t69
let t70 : t70 = copy_via_weak t70
let t71 : t71 = copy_via_weak t71
let t72 : t72 = copy_via_weak t72
let t73 : t73 = copy_via_weak t73
let t74 : t74 = copy_via_weak t74
let t75_A : t75 = copy_via_weak t75_A
let t75_B : t75 = copy_via_weak t75_B
let t76_A : t76 = copy_via_weak t76_A
let t76_B : t76 = copy_via_weak t76_B
let t77_A : t77 = copy_via_weak t77_A
let t77_B : t77 = copy_via_weak t77_B
let t78_A : t78 = copy_via_weak t78_A
let t78_B : t78 = copy_via_weak t78_B
let t79_A : t79 = copy_via_weak t79_A
let t79_B : t79 = copy_via_weak t79_B
let t80_A : t80 = copy_via_weak t80_A
let t80_B : t80 = copy_via_weak t80_B
let t81_A : t81 = copy_via_weak t81_A
let t81_B : t81 = copy_via_weak t81_B
let t82_A : t82 = copy_via_weak t82_A
let t82_B : t82 = copy_via_weak t82_B
let t83_A : t83 = copy_via_weak t83_A
let t83_B : t83 = copy_via_weak t83_B
let t84_A : t84 = copy_via_weak t84_A
let t84_B : t84 = copy_via_weak t84_B
let t85_A : t85 = copy_via_weak t85_A
let t85_B : t85 = copy_via_weak t85_B
let t86_A : t86 = copy_via_weak t86_A
let t86_B : t86 = copy_via_weak t86_B
let t87_A : t87 = copy_via_weak t87_A
let t87_B : t87 = copy_via_weak t87_B
let t88_A : t88 = copy_via_weak t88_A
let t88_B : t88 = copy_via_weak t88_B
let t89_A : t89 = copy_via_weak t89_A
let t89_B : t89 = copy_via_weak t89_B
let t90_A : t90 = copy_via_weak t90_A
let t90_B : t90 = copy_via_weak t90_B
let t91_A : t91 = copy_via_weak t91_A
let t91_B : t91 = copy_via_weak t91_B
let t92_A : t92 = copy_via_weak t92_A
let t92_B : t92 = copy_via_weak t92_B
let t93_A : t93 = copy_via_weak t93_A
let t93_B : t93 = copy_via_weak t93_B
let t94_A : t94 = copy_via_weak t94_A
let t94_B : t94 = copy_via_weak t94_B
let t95_A : t95 = copy_via_weak t95_A
let t95_B : t95 = copy_via_weak t95_B
let t96_A : t96 = copy_via_weak t96_A
let t96_B : t96 = copy_via_weak t96_B
let t97_A : t97 = copy_via_weak t97_A
let t97_B : t97 = copy_via_weak t97_B
let t98_A : t98 = copy_via_weak t98_A
let t98_B : t98 = copy_via_weak t98_B
let t99_A : t99 = copy_via_weak t99_A
let t99_B : t99 = copy_via_weak t99_B
let t100_A : t100 = copy_via_weak t100_A
let t100_B : t100 = copy_via_weak t100_B
let t101_A : t101 = copy_via_weak t101_A
let t101_B : t101 = copy_via_weak t101_B
let t102_A : t102 = copy_via_weak t102_A
let t102_B : t102 = copy_via_weak t102_B
let t103_A : t103 = copy_via_weak t103_A
let t103_B : t103 = copy_via_weak t103_B
let t104_A : t104 = copy_via_weak t104_A
let t104_B : t104 = copy_via_weak t104_B
let t105_A : t105 = copy_via_weak t105_A
let t105_B : t105 = copy_via_weak t105_B
let t106_A : t106 = copy_via_weak t106_A
let t106_B : t106 = copy_via_weak t106_B
let t107_A : t107 = copy_via_weak t107_A
let t107_B : t107 = copy_via_weak t107_B
let t108_A : t108 = copy_via_weak t108_A
let t108_B : t108 = copy_via_weak t108_B
let t109_A : t109 = copy_via_weak t109_A
let t109_B : t109 = copy_via_weak t109_B
let t110_A : t110 = copy_via_weak t110_A
let t110_B : t110 = copy_via_weak t110_B
let t111_A : t111 = copy_via_weak t111_A
let t111_B : t111 = copy_via_weak t111_B
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;
let () = print_endline " - Doing GC";;
let () = Gc.full_major ();;
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;
let () = print_endline "Copying values via [Obj.with_tag]";;
let t0 : t0 = copy_via_tag t0
let t1 : t1 = copy_via_tag t1
let t2 : t2 = copy_via_tag t2
let t3 : t3 = copy_via_tag t3
let t4 : t4 = copy_via_tag t4
let t5 : t5 = copy_via_tag t5
let t6 : t6 = copy_via_tag t6
let t7 : t7 = copy_via_tag t7
let t8 : t8 = copy_via_tag t8
let t9 : t9 = copy_via_tag t9
let t10 : t10 = copy_via_tag t10
let t11 : t11 = copy_via_tag t11
let t12 : t12 = copy_via_tag t12
let t13 : t13 = copy_via_tag t13
let t14 : t14 = copy_via_tag t14
let t15 : t15 = copy_via_tag t15
let t16 : t16 = copy_via_tag t16
let t17 : t17 = copy_via_tag t17
let t18 : t18 = copy_via_tag t18
let t19 : t19 = copy_via_tag t19
let t20 : t20 = copy_via_tag t20
let t21 : t21 = copy_via_tag t21
let t22 : t22 = copy_via_tag t22
let t23 : t23 = copy_via_tag t23
let t24 : t24 = copy_via_tag t24
let t25 : t25 = copy_via_tag t25
let t26 : t26 = copy_via_tag t26
let t27 : t27 = copy_via_tag t27
let t28 : t28 = copy_via_tag t28
let t29 : t29 = copy_via_tag t29
let t30 : t30 = copy_via_tag t30
let t31 : t31 = copy_via_tag t31
let t32 : t32 = copy_via_tag t32
let t33 : t33 = copy_via_tag t33
let t34 : t34 = copy_via_tag t34
let t35 : t35 = copy_via_tag t35
let t36 : t36 = copy_via_tag t36
let t37 : t37 = copy_via_tag t37
let t38 : t38 = copy_via_tag t38
let t39 : t39 = copy_via_tag t39
let t40 : t40 = copy_via_tag t40
let t41 : t41 = copy_via_tag t41
let t42 : t42 = copy_via_tag t42
let t43 : t43 = copy_via_tag t43
let t44 : t44 = copy_via_tag t44
let t45 : t45 = copy_via_tag t45
let t46 : t46 = copy_via_tag t46
let t47 : t47 = copy_via_tag t47
let t48 : t48 = copy_via_tag t48
let t49 : t49 = copy_via_tag t49
let t50 : t50 = copy_via_tag t50
let t51 : t51 = copy_via_tag t51
let t52 : t52 = copy_via_tag t52
let t53 : t53 = copy_via_tag t53
let t54 : t54 = copy_via_tag t54
let t55 : t55 = copy_via_tag t55
let t56 : t56 = copy_via_tag t56
let t57 : t57 = copy_via_tag t57
let t58 : t58 = copy_via_tag t58
let t59 : t59 = copy_via_tag t59
let t60 : t60 = copy_via_tag t60
let t61 : t61 = copy_via_tag t61
let t62 : t62 = copy_via_tag t62
let t63 : t63 = copy_via_tag t63
let t64 : t64 = copy_via_tag t64
let t65 : t65 = copy_via_tag t65
let t66 : t66 = copy_via_tag t66
let t67 : t67 = copy_via_tag t67
let t68 : t68 = copy_via_tag t68
let t69 : t69 = copy_via_tag t69
let t70 : t70 = copy_via_tag t70
let t71 : t71 = copy_via_tag t71
let t72 : t72 = copy_via_tag t72
let t73 : t73 = copy_via_tag t73
let t74 : t74 = copy_via_tag t74
let t75_A : t75 = copy_via_tag t75_A
let t75_B : t75 = copy_via_tag t75_B
let t76_A : t76 = copy_via_tag t76_A
let t76_B : t76 = copy_via_tag t76_B
let t77_A : t77 = copy_via_tag t77_A
let t77_B : t77 = copy_via_tag t77_B
let t78_A : t78 = copy_via_tag t78_A
let t78_B : t78 = copy_via_tag t78_B
let t79_A : t79 = copy_via_tag t79_A
let t79_B : t79 = copy_via_tag t79_B
let t80_A : t80 = copy_via_tag t80_A
let t80_B : t80 = copy_via_tag t80_B
let t81_A : t81 = copy_via_tag t81_A
let t81_B : t81 = copy_via_tag t81_B
let t82_A : t82 = copy_via_tag t82_A
let t82_B : t82 = copy_via_tag t82_B
let t83_A : t83 = copy_via_tag t83_A
let t83_B : t83 = copy_via_tag t83_B
let t84_A : t84 = copy_via_tag t84_A
let t84_B : t84 = copy_via_tag t84_B
let t85_A : t85 = copy_via_tag t85_A
let t85_B : t85 = copy_via_tag t85_B
let t86_A : t86 = copy_via_tag t86_A
let t86_B : t86 = copy_via_tag t86_B
let t87_A : t87 = copy_via_tag t87_A
let t87_B : t87 = copy_via_tag t87_B
let t88_A : t88 = copy_via_tag t88_A
let t88_B : t88 = copy_via_tag t88_B
let t89_A : t89 = copy_via_tag t89_A
let t89_B : t89 = copy_via_tag t89_B
let t90_A : t90 = copy_via_tag t90_A
let t90_B : t90 = copy_via_tag t90_B
let t91_A : t91 = copy_via_tag t91_A
let t91_B : t91 = copy_via_tag t91_B
let t92_A : t92 = copy_via_tag t92_A
let t92_B : t92 = copy_via_tag t92_B
let t93_A : t93 = copy_via_tag t93_A
let t93_B : t93 = copy_via_tag t93_B
let t94_A : t94 = copy_via_tag t94_A
let t94_B : t94 = copy_via_tag t94_B
let t95_A : t95 = copy_via_tag t95_A
let t95_B : t95 = copy_via_tag t95_B
let t96_A : t96 = copy_via_tag t96_A
let t96_B : t96 = copy_via_tag t96_B
let t97_A : t97 = copy_via_tag t97_A
let t97_B : t97 = copy_via_tag t97_B
let t98_A : t98 = copy_via_tag t98_A
let t98_B : t98 = copy_via_tag t98_B
let t99_A : t99 = copy_via_tag t99_A
let t99_B : t99 = copy_via_tag t99_B
let t100_A : t100 = copy_via_tag t100_A
let t100_B : t100 = copy_via_tag t100_B
let t101_A : t101 = copy_via_tag t101_A
let t101_B : t101 = copy_via_tag t101_B
let t102_A : t102 = copy_via_tag t102_A
let t102_B : t102 = copy_via_tag t102_B
let t103_A : t103 = copy_via_tag t103_A
let t103_B : t103 = copy_via_tag t103_B
let t104_A : t104 = copy_via_tag t104_A
let t104_B : t104 = copy_via_tag t104_B
let t105_A : t105 = copy_via_tag t105_A
let t105_B : t105 = copy_via_tag t105_B
let t106_A : t106 = copy_via_tag t106_A
let t106_B : t106 = copy_via_tag t106_B
let t107_A : t107 = copy_via_tag t107_A
let t107_B : t107 = copy_via_tag t107_B
let t108_A : t108 = copy_via_tag t108_A
let t108_B : t108 = copy_via_tag t108_B
let t109_A : t109 = copy_via_tag t109_A
let t109_B : t109 = copy_via_tag t109_B
let t110_A : t110 = copy_via_tag t110_A
let t110_B : t110 = copy_via_tag t110_B
let t111_A : t111 = copy_via_tag t111_A
let t111_B : t111 = copy_via_tag t111_B
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;
let () = print_endline " - Doing GC";;
let () = Gc.full_major ();;
let () = print_endline " - Running checks";;
let () = run_checks t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t70 t71 t72 t73 t74 t75_A t75_B t76_A t76_B t77_A t77_B t78_A t78_B t79_A t79_B t80_A t80_B t81_A t81_B t82_A t82_B t83_A t83_B t84_A t84_B t85_A t85_B t86_A t86_B t87_A t87_B t88_A t88_B t89_A t89_B t90_A t90_B t91_A t91_B t92_A t92_B t93_A t93_B t94_A t94_B t95_A t95_B t96_A t96_B t97_A t97_B t98_A t98_B t99_A t99_B t100_A t100_B t101_A t101_B t102_A t102_B t103_A t103_B t104_A t104_B t105_A t105_B t106_A t106_B t107_A t107_B t108_A t108_B t109_A t109_B t110_A t110_B t111_A t111_B;;

(* Testing local allocation *)
external opaque_ignore : ('a [@local_opt]) -> unit = "%opaque"
let go () =
  let local_ t0 : t0 = { float0 = create_float (); float_u1 = create_float_u () } in
  let local_ t1 : t1 = { float_u0 = create_float_u (); float1 = create_float () } in
  let local_ t2 : t2 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u () } in
  let local_ t3 : t3 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u () } in
  let local_ t4 : t4 = { float0 = create_float (); float1 = create_float (); float_u2 = create_float_u () } in
  let local_ t5 : t5 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float2 = create_float () } in
  let local_ t6 : t6 = { float0 = create_float (); float_u1 = create_float_u (); float2 = create_float () } in
  let local_ t7 : t7 = { float_u0 = create_float_u (); float1 = create_float (); float2 = create_float () } in
  let local_ t8 : t8 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u (); float_u3 = create_float_u () } in
  let local_ t9 : t9 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u (); float_u3 = create_float_u () } in
  let local_ t10 : t10 = { float0 = create_float (); float1 = create_float (); float_u2 = create_float_u (); float_u3 = create_float_u () } in
  let local_ t11 : t11 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float2 = create_float (); float_u3 = create_float_u () } in
  let local_ t12 : t12 = { float0 = create_float (); float_u1 = create_float_u (); float2 = create_float (); float_u3 = create_float_u () } in
  let local_ t13 : t13 = { float_u0 = create_float_u (); float1 = create_float (); float2 = create_float (); float_u3 = create_float_u () } in
  let local_ t14 : t14 = { float0 = create_float (); float1 = create_float (); float2 = create_float (); float_u3 = create_float_u () } in
  let local_ t15 : t15 = { float_u0 = create_float_u (); float_u1 = create_float_u (); float_u2 = create_float_u (); float3 = create_float () } in
  let local_ t16 : t16 = { float0 = create_float (); float_u1 = create_float_u (); float_u2 = create_float_u (); float3 = create_float () } in
  let local_ t17 : t17 = { float_u0 = create_float_u (); float1 = create_float (); float_u2 = create_float_u (); float3 = create_float () } in
  let local_ t18 : t18 = { str0 = create_string (); float_u1 = create_float_u () } in
  let local_ t19 : t19 = { float32_u0 = create_float32_u () } in
  let local_ t20 : t20 = { str0 = create_string (); float32_u1 = create_float32_u () } in
  let local_ t21 : t21 = { i32_0 = create_int32_u () } in
  let local_ t22 : t22 = { str0 = create_string (); str1 = create_string (); float_u2 = create_float_u () } in
  let local_ t23 : t23 = { float0 = create_float (); float32_u1 = create_float32_u () } in
  let local_ t24 : t24 = { str0 = create_string (); i32_1 = create_int32_u () } in
  let local_ t25 : t25 = { i64_0 = create_int64_u () } in
  let local_ t26 : t26 = { float0 = create_float (); str1 = create_string (); float_u2 = create_float_u () } in
  let local_ t27 : t27 = { str0 = create_string (); str1 = create_string (); float32_u2 = create_float32_u () } in
  let local_ t28 : t28 = { float0 = create_float (); i32_1 = create_int32_u () } in
  let local_ t29 : t29 = { str0 = create_string (); i64_1 = create_int64_u () } in
  let local_ t30 : t30 = { n0 = create_nativeint_u () } in
  let local_ t31 : t31 = { imm0 = create_int (); str1 = create_string (); float_u2 = create_float_u () } in
  let local_ t32 : t32 = { float0 = create_float (); str1 = create_string (); float32_u2 = create_float32_u () } in
  let local_ t33 : t33 = { str0 = create_string (); str1 = create_string (); i32_2 = create_int32_u () } in
  let local_ t34 : t34 = { float0 = create_float (); i64_1 = create_int64_u () } in
  let local_ t35 : t35 = { str0 = create_string (); n1 = create_nativeint_u () } in
  let local_ t36 : t36 = { float_u0 = create_float_u (); imm1 = create_int () } in
  let local_ t37 : t37 = { str0 = create_string (); float1 = create_float (); float_u2 = create_float_u () } in
  let local_ t38 : t38 = { imm0 = create_int (); str1 = create_string (); float32_u2 = create_float32_u () } in
  let local_ t39 : t39 = { float0 = create_float (); str1 = create_string (); i32_2 = create_int32_u () } in
  let local_ t40 : t40 = { str0 = create_string (); str1 = create_string (); i64_2 = create_int64_u () } in
  let local_ t41 : t41 = { float0 = create_float (); n1 = create_nativeint_u () } in
  let local_ t42 : t42 = { str0 = create_string (); float_u1 = create_float_u (); imm2 = create_int () } in
  let local_ t43 : t43 = { float32_u0 = create_float32_u (); imm1 = create_int () } in
  let local_ t44 : t44 = { str0 = create_string (); float1 = create_float (); float32_u2 = create_float32_u () } in
  let local_ t45 : t45 = { imm0 = create_int (); str1 = create_string (); i32_2 = create_int32_u () } in
  let local_ t46 : t46 = { float0 = create_float (); str1 = create_string (); i64_2 = create_int64_u () } in
  let local_ t47 : t47 = { str0 = create_string (); str1 = create_string (); n2 = create_nativeint_u () } in
  let local_ t48 : t48 = { float0 = create_float (); float_u1 = create_float_u (); imm2 = create_int () } in
  let local_ t49 : t49 = { str0 = create_string (); float32_u1 = create_float32_u (); imm2 = create_int () } in
  let local_ t50 : t50 = { i32_0 = create_int32_u (); imm1 = create_int () } in
  let local_ t51 : t51 = { imm0 = create_int (); float1 = create_float (); float_u2 = create_float_u () } in
  let local_ t52 : t52 = { float0 = create_float (); float1 = create_float (); float32_u2 = create_float32_u () } in
  let local_ t53 : t53 = { str0 = create_string (); float1 = create_float (); i32_2 = create_int32_u () } in
  let local_ t54 : t54 = { imm0 = create_int (); str1 = create_string (); i64_2 = create_int64_u () } in
  let local_ t55 : t55 = { float0 = create_float (); str1 = create_string (); n2 = create_nativeint_u () } in
  let local_ t56 : t56 = { str0 = create_string (); str1 = create_string (); float_u2 = create_float_u (); imm3 = create_int () } in
  let local_ t57 : t57 = { float0 = create_float (); float32_u1 = create_float32_u (); imm2 = create_int () } in
  let local_ t58 : t58 = { str0 = create_string (); i32_1 = create_int32_u (); imm2 = create_int () } in
  let local_ t59 : t59 = { i64_0 = create_int64_u (); imm1 = create_int () } in
  let local_ t60 : t60 = { str0 = create_string (); str1 = create_string (); str2 = create_string (); float_u3 = create_float_u () } in
  let local_ t61 : t61 = { imm0 = create_int (); float1 = create_float (); float32_u2 = create_float32_u () } in
  let local_ t62 : t62 = { float0 = create_float (); float1 = create_float (); i32_2 = create_int32_u () } in
  let local_ t63 : t63 = { str0 = create_string (); float1 = create_float (); i64_2 = create_int64_u () } in
  let local_ t64 : t64 = { imm0 = create_int (); str1 = create_string (); n2 = create_nativeint_u () } in
  let local_ t65 : t65 = { float0 = create_float (); str1 = create_string (); float_u2 = create_float_u (); imm3 = create_int () } in
  let local_ t66 : t66 = { str0 = create_string (); str1 = create_string (); float32_u2 = create_float32_u (); imm3 = create_int () } in
  let local_ t67 : t67 = { float0 = create_float (); i32_1 = create_int32_u (); imm2 = create_int () } in
  let local_ t68 : t68 = { str0 = create_string (); i64_1 = create_int64_u (); imm2 = create_int () } in
  let local_ t69 : t69 = { n0 = create_nativeint_u (); imm1 = create_int () } in
  let local_ t70 : t70 = { float0 = create_float (); str1 = create_string (); str2 = create_string (); float_u3 = create_float_u () } in
  let local_ t71 : t71 = { str0 = create_string (); str1 = create_string (); str2 = create_string (); float32_u3 = create_float32_u () } in
  let local_ t72 : t72 = { imm0 = create_int (); float1 = create_float (); i32_2 = create_int32_u () } in
  let local_ t73 : t73 = { float0 = create_float (); float1 = create_float (); i64_2 = create_int64_u () } in
  let local_ t74 : t74 = { str0 = create_string (); float1 = create_float (); n2 = create_nativeint_u () } in
  let local_ t75_A : t75 = (A (create_float_u ())) in
  let local_ t75_B : t75 = (B (create_string (), create_float_u ())) in
  let local_ t76_A : t76 = (A (create_float32_u ())) in
  let local_ t76_B : t76 = (B (create_float (), create_float_u ())) in
  let local_ t77_A : t77 = (A (create_string (), create_float32_u ())) in
  let local_ t77_B : t77 = (B (create_int32_u ())) in
  let local_ t78_A : t78 = (A (create_string (), create_string (), create_float_u ())) in
  let local_ t78_B : t78 = (B (create_float (), create_float32_u ())) in
  let local_ t79_A : t79 = (A (create_string (), create_int32_u ())) in
  let local_ t79_B : t79 = (B (create_int64_u ())) in
  let local_ t80_A : t80 = (A (create_float (), create_string (), create_float_u ())) in
  let local_ t80_B : t80 = (B (create_string (), create_string (), create_float32_u ())) in
  let local_ t81_A : t81 = (A (create_float (), create_int32_u ())) in
  let local_ t81_B : t81 = (B (create_string (), create_int64_u ())) in
  let local_ t82_A : t82 = (A (create_nativeint_u ())) in
  let local_ t82_B : t82 = (B (create_int (), create_string (), create_float_u ())) in
  let local_ t83_A : t83 = (A (create_float (), create_string (), create_float32_u ())) in
  let local_ t83_B : t83 = (B (create_string (), create_string (), create_int32_u ())) in
  let local_ t84_A : t84 = (A (create_float (), create_int64_u ())) in
  let local_ t84_B : t84 = (B (create_string (), create_nativeint_u ())) in
  let local_ t85_A : t85 = (A (create_float_u (), create_int ())) in
  let local_ t85_B : t85 = (B (create_string (), create_float (), create_float_u ())) in
  let local_ t86_A : t86 = (A (create_int (), create_string (), create_float32_u ())) in
  let local_ t86_B : t86 = (B (create_float (), create_string (), create_int32_u ())) in
  let local_ t87_A : t87 = (A (create_string (), create_string (), create_int64_u ())) in
  let local_ t87_B : t87 = (B (create_float (), create_nativeint_u ())) in
  let local_ t88_A : t88 = (A (create_string (), create_float_u (), create_int ())) in
  let local_ t88_B : t88 = (B (create_float32_u (), create_int ())) in
  let local_ t89_A : t89 = (A (create_float (), create_float (), create_float_u ())) in
  let local_ t89_B : t89 = (B (create_string (), create_float (), create_float32_u ())) in
  let local_ t90_A : t90 = (A (create_int (), create_string (), create_int32_u ())) in
  let local_ t90_B : t90 = (B (create_float (), create_string (), create_int64_u ())) in
  let local_ t91_A : t91 = (A (create_string (), create_string (), create_nativeint_u ())) in
  let local_ t91_B : t91 = (B (create_float (), create_float_u (), create_int ())) in
  let local_ t92_A : t92 = (A (create_string (), create_float32_u (), create_int ())) in
  let local_ t92_B : t92 = (B (create_int32_u (), create_int ())) in
  let local_ t93_A : t93 = (A (create_int (), create_float (), create_float_u ())) in
  let local_ t93_B : t93 = (B (create_float (), create_float (), create_float32_u ())) in
  let local_ t94_A : t94 = (A (create_string (), create_float (), create_int32_u ())) in
  let local_ t94_B : t94 = (B (create_int (), create_string (), create_int64_u ())) in
  let local_ t95_A : t95 = (A (create_float (), create_string (), create_nativeint_u ())) in
  let local_ t95_B : t95 = (B (create_string (), create_string (), create_float_u (), create_int ())) in
  let local_ t96_A : t96 = (A (create_float (), create_float32_u (), create_int ())) in
  let local_ t96_B : t96 = (B (create_string (), create_int32_u (), create_int ())) in
  let local_ t97_A : t97 = (A (create_int64_u (), create_int ())) in
  let local_ t97_B : t97 = (B (create_string (), create_string (), create_string (), create_float_u ())) in
  let local_ t98_A : t98 = (A (create_int (), create_float (), create_float32_u ())) in
  let local_ t98_B : t98 = (B (create_float (), create_float (), create_int32_u ())) in
  let local_ t99_A : t99 = (A (create_string (), create_float (), create_int64_u ())) in
  let local_ t99_B : t99 = (B (create_int (), create_string (), create_nativeint_u ())) in
  let local_ t100_A : t100 = (A (create_float (), create_string (), create_float_u (), create_int ())) in
  let local_ t100_B : t100 = (B (create_string (), create_string (), create_float32_u (), create_int ())) in
  let local_ t101_A : t101 = (A (create_float (), create_int32_u (), create_int ())) in
  let local_ t101_B : t101 = (B (create_string (), create_int64_u (), create_int ())) in
  let local_ t102_A : t102 = (A (create_nativeint_u (), create_int ())) in
  let local_ t102_B : t102 = (B (create_float (), create_string (), create_string (), create_float_u ())) in
  let local_ t103_A : t103 = (A (create_string (), create_string (), create_string (), create_float32_u ())) in
  let local_ t103_B : t103 = (B (create_int (), create_float (), create_int32_u ())) in
  let local_ t104_A : t104 = (A (create_float (), create_float (), create_int64_u ())) in
  let local_ t104_B : t104 = (B (create_string (), create_float (), create_nativeint_u ())) in
  let local_ t105_A : t105 = (A (create_int (), create_string (), create_float_u (), create_int ())) in
  let local_ t105_B : t105 = (B (create_float (), create_string (), create_float32_u (), create_int ())) in
  let local_ t106_A : t106 = (A (create_string (), create_string (), create_int32_u (), create_int ())) in
  let local_ t106_B : t106 = (B (create_float (), create_int64_u (), create_int ())) in
  let local_ t107_A : t107 = (A (create_string (), create_nativeint_u (), create_int ())) in
  let local_ t107_B : t107 = (B (create_float_u (), create_int63 ())) in
  let local_ t108_A : t108 = (A (create_int (), create_string (), create_string (), create_float_u ())) in
  let local_ t108_B : t108 = (B (create_float (), create_string (), create_string (), create_float32_u ())) in
  let local_ t109_A : t109 = (A (create_string (), create_string (), create_string (), create_int32_u ())) in
  let local_ t109_B : t109 = (B (create_int (), create_float (), create_int64_u ())) in
  let local_ t110_A : t110 = (A (create_float (), create_float (), create_nativeint_u ())) in
  let local_ t110_B : t110 = (B (create_string (), create_float (), create_float_u (), create_int ())) in
  let local_ t111_A : t111 = (A (create_int (), create_string (), create_float32_u (), create_int ())) in
  let local_ t111_B : t111 = (B (create_float (), create_string (), create_int32_u (), create_int ())) in
    let module _ = struct
    let () = print_endline " - Doing GC";;
    let () = Gc.full_major ();;
  end in
  opaque_ignore t0;
  opaque_ignore t1;
  opaque_ignore t2;
  opaque_ignore t3;
  opaque_ignore t4;
  opaque_ignore t5;
  opaque_ignore t6;
  opaque_ignore t7;
  opaque_ignore t8;
  opaque_ignore t9;
  opaque_ignore t10;
  opaque_ignore t11;
  opaque_ignore t12;
  opaque_ignore t13;
  opaque_ignore t14;
  opaque_ignore t15;
  opaque_ignore t16;
  opaque_ignore t17;
  opaque_ignore t18;
  opaque_ignore t19;
  opaque_ignore t20;
  opaque_ignore t21;
  opaque_ignore t22;
  opaque_ignore t23;
  opaque_ignore t24;
  opaque_ignore t25;
  opaque_ignore t26;
  opaque_ignore t27;
  opaque_ignore t28;
  opaque_ignore t29;
  opaque_ignore t30;
  opaque_ignore t31;
  opaque_ignore t32;
  opaque_ignore t33;
  opaque_ignore t34;
  opaque_ignore t35;
  opaque_ignore t36;
  opaque_ignore t37;
  opaque_ignore t38;
  opaque_ignore t39;
  opaque_ignore t40;
  opaque_ignore t41;
  opaque_ignore t42;
  opaque_ignore t43;
  opaque_ignore t44;
  opaque_ignore t45;
  opaque_ignore t46;
  opaque_ignore t47;
  opaque_ignore t48;
  opaque_ignore t49;
  opaque_ignore t50;
  opaque_ignore t51;
  opaque_ignore t52;
  opaque_ignore t53;
  opaque_ignore t54;
  opaque_ignore t55;
  opaque_ignore t56;
  opaque_ignore t57;
  opaque_ignore t58;
  opaque_ignore t59;
  opaque_ignore t60;
  opaque_ignore t61;
  opaque_ignore t62;
  opaque_ignore t63;
  opaque_ignore t64;
  opaque_ignore t65;
  opaque_ignore t66;
  opaque_ignore t67;
  opaque_ignore t68;
  opaque_ignore t69;
  opaque_ignore t70;
  opaque_ignore t71;
  opaque_ignore t72;
  opaque_ignore t73;
  opaque_ignore t74;
  opaque_ignore t75_A;
  opaque_ignore t75_B;
  opaque_ignore t76_A;
  opaque_ignore t76_B;
  opaque_ignore t77_A;
  opaque_ignore t77_B;
  opaque_ignore t78_A;
  opaque_ignore t78_B;
  opaque_ignore t79_A;
  opaque_ignore t79_B;
  opaque_ignore t80_A;
  opaque_ignore t80_B;
  opaque_ignore t81_A;
  opaque_ignore t81_B;
  opaque_ignore t82_A;
  opaque_ignore t82_B;
  opaque_ignore t83_A;
  opaque_ignore t83_B;
  opaque_ignore t84_A;
  opaque_ignore t84_B;
  opaque_ignore t85_A;
  opaque_ignore t85_B;
  opaque_ignore t86_A;
  opaque_ignore t86_B;
  opaque_ignore t87_A;
  opaque_ignore t87_B;
  opaque_ignore t88_A;
  opaque_ignore t88_B;
  opaque_ignore t89_A;
  opaque_ignore t89_B;
  opaque_ignore t90_A;
  opaque_ignore t90_B;
  opaque_ignore t91_A;
  opaque_ignore t91_B;
  opaque_ignore t92_A;
  opaque_ignore t92_B;
  opaque_ignore t93_A;
  opaque_ignore t93_B;
  opaque_ignore t94_A;
  opaque_ignore t94_B;
  opaque_ignore t95_A;
  opaque_ignore t95_B;
  opaque_ignore t96_A;
  opaque_ignore t96_B;
  opaque_ignore t97_A;
  opaque_ignore t97_B;
  opaque_ignore t98_A;
  opaque_ignore t98_B;
  opaque_ignore t99_A;
  opaque_ignore t99_B;
  opaque_ignore t100_A;
  opaque_ignore t100_B;
  opaque_ignore t101_A;
  opaque_ignore t101_B;
  opaque_ignore t102_A;
  opaque_ignore t102_B;
  opaque_ignore t103_A;
  opaque_ignore t103_B;
  opaque_ignore t104_A;
  opaque_ignore t104_B;
  opaque_ignore t105_A;
  opaque_ignore t105_B;
  opaque_ignore t106_A;
  opaque_ignore t106_B;
  opaque_ignore t107_A;
  opaque_ignore t107_B;
  opaque_ignore t108_A;
  opaque_ignore t108_B;
  opaque_ignore t109_A;
  opaque_ignore t109_B;
  opaque_ignore t110_A;
  opaque_ignore t110_B;
  opaque_ignore t111_A;
  opaque_ignore t111_B;
  ();;
let () = print_endline "Testing local allocations";;
let () = go ();;
